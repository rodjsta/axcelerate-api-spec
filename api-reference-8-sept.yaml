openapi: 3.0.3
info:
  title: aXcelerate API
  version: 1.0.0
  contact:
    email: support@axcelerate.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: Production Environment
    url: https://{subdomain}.app.axcelerate.com/api
    variables:
      subdomain:
        default: demo
        description: Subdomain provisioned by aXcelerate for your production client account.
  - description: Staging Environment
    url: https://{subdomain}.stg.axcelerate.com/api
    variables:
      subdomain:
        default: demo
        description: Subdomain provisioned by aXcelerate for your staging client account.
paths:
  /agent:
    post:
      tags:
        - Agent
      summary: Create a new agent
      description: |
        Create a new agent. This endpoint is only available for clients using
        the Marketing/Sales Agents feature.


        **Custom Fields**

        Agent Custom Fields values may be added by specifying their variable name prefixed by `custom_field_` EG: `custom_field_region`, `custom_field_specialty`.
        Values used should correspond to the custom field specified. Note: this will not create custom fields, they must already exist.
      operationId: createANewAgent
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  description: The contact ID of the marketing agent.
                  type: integer
                  example: 13955345
                taxRuleId:
                  description: >-
                    The tax rule to be specified for this agent. 1 = Excluding
                    GST, 2 = Including GST, 3 = Exempt.
                  type: integer
                  example: 1
                commissionRate:
                  description: >-
                    The percentage commission, between 0 and 100, that the agent
                    will receive.
                  type: integer
                  example: 11
              required:
                - contactId
                - taxRuleId
      responses:
        '200':
          description: 'An Agent object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
  /agent/{contactId}:
    get:
      tags:
        - Agent
      summary: Retrieve an existing agent
      description: >-
        Retrieve an existing agent. This endpoint is only available for clients
        using the Marketing/Sales Agents feature.
      operationId: retrieveAnExistingAgent
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact ID of the Marketing Agent.
          schema:
            type: integer
            example: 13955345
      responses:
        '200':
          description: 'An Agent object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
    put:
      tags:
        - Agent
      summary: Update an agent
      description: |
        Update an existing agent. This endpoint is only available for clients using the Marketing/Sales Agents feature.


        **Custom Fields**

        Agent Custom Fields may be updated by specifying their variable name prefixed by `custom_field_` EG: `custom_field_region`, `custom_field_specialty`.
        Values used should correspond to the custom field specified. Note: this will not create custom fields, they must already exist.
      operationId: updateAnAgent
      parameters:
        - name: contactId
          required: true
          in: path
          description: Contact ID of the Marketing Agent.
          schema:
            type: integer
            example: 13955345
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                taxRuleId:
                  description: >-
                    The tax rule to be specified for this agent. 1 = Excluding
                    GST, 2 = Including GST, 3 = Exempt.
                  type: integer
                  example: 1
                commissionRate:
                  description: >-
                    The percentage commission, between 0 and 100, that the agent
                    will receive.
                  type: integer
                  example: 20
      responses:
        '200':
          description: 'An Agent object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
  /accounting/invoice:
    get:
      tags:
        - Accounting Invoice
      summary: Search for invoices
      description: Search for invoices by Contact ID or External Reference.
      operationId: searchForAnInvoice
      parameters:
        - name: contactId
          in: query
          schema:
            type: integer
            example: 6341338
          description: The Contact ID to search invoices against.
          required: true
        - name: externalReference
          in: query
          schema:
            type: string
          description: A reference to external accounting system.
      responses:
        '200':
          description: 'An array of Invoice Summary objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceSummary'
    post:
      tags:
        - Accounting Invoice
      summary: Create a new invoice
      description: |
        Create a new invoice for a contact.

        The `aItem` parameter should be an array containing JSON strings of invoice items. For example:
        ```json
        [
          {
            "description": "string",
            "qty": "numeric",
            "itemCode": "string",
            "itemId": "numeric",
            "financeCode": "string",
            "taxPercent": "numeric",
            "hasChildren": "boolean",
            "costCentreCode": "string",
            "unitPriceGross": "numeric",
            "domainId": "numeric",
            "serviceDate": "date",
            "partId": "numeric",
            "data": "string",
          }
        ]
        ```

        **Item Quantity**

        Must be greater than zero. If `qty` is zero and an `itemId` is defined then the line item matching that `itemId` is removed from the invoice.

        **Item Id**

        To edit an existing line item the `itemId` must be specified, for a new line item this value can be omitted or set to zero. Note: If an `itemId` is specified and `qty` is set to zero then that line item is deleted from the invoice.

        **Service Date**

        The service date associated with the line-item. Supported Formats are: {ts 'YYYY-MM-DDThh:mm:ss'} or YYYY-MM-DDThh:mm:ss

        **aItem Required Parameters**

        * `description` - The description of the item.
        * `qty` - The quantity of the item.
        * `itemCode` - The item code associated with this line item.
        * `financeCode` - The finance code associated with this line item.
        * `taxPercent` - The tax percentage associated with this line item.
        * `hasChildren` - A boolean value indicating if this line item has children.
        * `unitPriceGross` - The gross price for a single quantity of the item (i.e. 15.96 for $15.96)

      operationId: createANewInvoice
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  description: The contactId for the Invoice
                  type: string
                  example: ''
                invoiceDate:
                  description: Invoice date yyyy-mm-dd.
                  type: string
                  example: ''
                orderDate:
                  description: Order date yyyy-mm-dd.
                  type: string
                  example: ''
                firstname:
                  description: Given name for the Invoice Bill To
                  type: string
                  example: ''
                lastname:
                  description: Lastname for the Invoice Bill To
                  type: string
                  example: ''
                aItem:
                  description: Invoice item(s) data in json format as per description.
                  type: string
                  example: ''
                externalReference:
                  description: >-
                    A reference to external accounting system. This is only
                    editable via the API (60 characters max).
                  type: string
                  example: ''
              required:
                - contactId
                - firstname
                - lastname
                - invoiceDate
                - orderDate
                - aItem
      responses:
        '200':
          description: 'An Invoice object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
  /accounting/invoice/{invoiceId}:
    get:
      tags:
        - Accounting Invoice
      summary: Retrieve an existing invoice
      description: Retrieve an existing invoice.
      operationId: retrieveAnExistingInvoice
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: string
            example: '3047093'
      responses:
        '200':
          description: 'An Invoice object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
    put:
      tags:
        - Accounting Invoice
      summary: Update an existing invoice
      description: |
        Update an existing invoice.

        The `aItem` parameter should be an array containing JSON strings of invoice items. For example:
        ```json
        [
          {
            "description": "string",
            "qty": "numeric",
            "itemCode": "string",
            "itemId": "numeric",
            "financeCode": "string",
            "taxPercent": "numeric",
            "hasChildren": "boolean",
            "costCentreCode": "string",
            "unitPriceGross": "numeric",
            "domainId": "numeric",
            "serviceDate": "date",
            "partId": "numeric",
            "data": "string",
          }
        ]
        ```

        **Item Quantity**

        Must be greater than zero. If `qty` is zero and an `itemId` is defined then the line item matching that `itemId` is removed from the invoice.

        **Item Id**

        To edit an existing line item the `itemId` must be specified, for a new line item this value can be omitted or set to zero. Note: If an `itemId` is specified and `qty` is set to zero then that line item is deleted from the invoice.

        **Service Date**

        The service date associated with the line-item. Supported Formats are: {ts 'YYYY-MM-DDThh:mm:ss'} or YYYY-MM-DDThh:mm:ss

        **aItem Required Parameters**

        * `description` - The description of the item.
        * `qty` - The quantity of the item.
        * `itemCode` - The item code associated with this line item.
        * `financeCode` - The finance code associated with this line item.
        * `taxPercent` - The tax percentage associated with this line item.
        * `hasChildren` - A boolean value indicating if this line item has children.
        * `unitPriceGross` - The gross price for a single quantity of the item (i.e. 15.96 for $15.96)
      operationId: updateAnExistingInvoice
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: string
            example: '3047093'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  description: The contactID for invoice contact.
                  type: string
                  example: ''
                invoiceDate:
                  description: Invoice date yyyy-mm-dd.
                  type: string
                  example: ''
                orderDate:
                  description: Order date yyyy-mm-dd
                  type: string
                  example: ''
                firstname:
                  description: Givename for the invoice bill to.
                  type: string
                  example: ''
                lastname:
                  description: Lastname for the invoice bill to.
                  type: string
                  example: ''
                email:
                  description: Email address.
                  type: string
                  example: ''
                orgId:
                  description: Organisation ID code.
                  type: string
                  example: ''
                orderNr:
                  description: Order number
                  type: string
                  example: ''
                aItem:
                  description: Invoice item(s) data in json format.
                  type: string
                  example: ''
                houseNr:
                  description: Address house number
                  type: string
                  example: ''
                address2:
                  description: Address line 2.
                  type: string
                  example: ''
                street:
                  description: Street name.
                  type: string
                  example: ''
                city:
                  description: Address City
                  type: string
                  example: ''
                state:
                  description: Address State
                  type: string
                  example: ''
                postCode:
                  description: Address Post Code
                  type: string
                  example: ''
                country:
                  description: Address Country code
                  type: string
                  example: ''
                countryIso3166:
                  description: Country ISO 3166 code
                  type: string
                  example: ''
                comment:
                  description: Comment text.
                  type: string
                  example: ''
                externalReference:
                  description: >-
                    A reference to external accounting system. This is only
                    editable via the API (60 characters max).
                  type: string
                  example: ''
                phoneNr:
                  description: Phone number
                  type: string
                  example: ''
                shipFirstName:
                  description: Given Names of person on a shipping address.
                  type: string
                  example: ''
                shipLastName:
                  description: Last Names of person on a shipping address.
                  type: string
                  example: ''
                shipHouseNr:
                  description: House number of a shipping address.
                  type: string
                  example: ''
                shipAddress2:
                  description: Address line 2 of a shipping address.
                  type: string
                  example: ''
                shipCity:
                  description: City name on a shipping address
                  type: string
                  example: ''
                shipCountryIso3166:
                  description: Ship Country ISO 3166 code
                  type: string
                  example: ''
                shipStreet:
                  description: Address Street Name
                  type: string
                  example: ''
                shipState:
                  description: State of a shipping address.
                  type: string
                  example: ''
                shipPostCode:
                  description: Post code of a shipping address.
                  type: string
                  example: ''
              required:
                - contactId
                - firstname
                - lastname
                - invoiceDate
                - orderDate
                - aItem
      responses:
        '200':
          description: 'An Invoice object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
  /accounting/invoice/{invoiceGuid}/approve:
    put:
      tags:
        - Accounting Invoice
      summary: Approve an invoice for payment
      description: Prepare an invoice for payment, and return payment URL.
      operationId: approveAnInvoiceForPayment
      parameters:
        - name: invoiceGuid
          required: true
          in: path
          schema:
            type: string
            example: '2FA2C39F-B2B6-4301-9943667E7AC43FFE'
      responses:
        '200':
          description: 'Response with a payment URL.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  PAYMENTURL:
                    type: string
                    description: URL to display the invoice within aXcelerate and process a payment.
                    example: "https://demo.app.axcelerate.com/payment/invoice/?invGUID=BAB653DF-C813-4C02-90F87BD32545B181"
  /accounting/invoice/{invoiceGuid}/void:
    post:
      tags:
        - Accounting Invoice
      summary: Void an invoice
      description: |
        This endpoint will allow an invoice to be marked as void.

        Invoices that have payments applied to them cannot be voided. To void an invoice with payments applied, the payments must be removed first.
      operationId: voidAnInvoice
      parameters:
        - name: invoiceGuid
          required: true
          in: path
          schema:
            type: string
            example: '2FA2C39F-B2B6-4301-9943667E7AC43FFE'
      responses:
        '204':
          description: 'No Content'
  /accounting/invoice/{invoiceId}/paymenturl:
    get:
      tags:
        - Accounting Checkout
      summary: Retrieve an invoice payment URL
      description: Retrieve a payment URL for an invoice.
      operationId: retrieveAnInvoicePaymentUrl
      parameters:
        - name: invoiceId
          required: true
          in: path
          schema:
            type: integer
            example: 3047093
      responses:
        '200':
          description: 'Response with a payment URL.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  PAYMENTURL:
                    type: string
                    description: URL to display the invoice within aXcelerate and process a payment.
                    example: "https://demo.app.axcelerate.com/payment/invoice/?invGUID=BAB653DF-C813-4C02-90F87BD32545B181"
  /accounting/ecommerce/payment/url:
    get:
      tags:
        - Accounting Checkout
      summary: Create a checkout URL for payment
      description: |
        Returns the HTML and form method/action that can be used to display a form and process
        payment for an invoice using the payment platform configured in settings.


        Alternatively, you can use the `ACTION` URL to redirect the user to the payment page.
      operationId: createACheckoutUrlForPayment
      parameters:
        - name: reference
          in: query
          schema:
            type: string
            example: ''
          description: External identifier for the payment flow process.
          required: true
        - name: invoiceGUID
          in: query
          schema:
            type: string
            example: ''
          description: GUID of the invoice to create a checkout URL.
          required: true
        - name: redirectURL
          in: query
          schema:
            type: string
            example: https://www.example.com/thank-you
          description: >-
            URL for the address where the user should be redirected after
            payment processing. Must include URL protocol.
          required: true
        - name: cancelURL
          in: query
          schema:
            type: string
            example: https://www.example.com/canceled-payment
          description: >-
            URL for the address where the user should be redirected if checkout
            is canceled. Must include URL protocol.
      responses:
        '200':
          description: Successful response containing details unique to the payment gateway.
          content:
            application/json:
              schema:
                type: object
                properties:
                  META:
                    type: object
                    description: Metadata associated with the payment section.
                  FORMMETHOD:
                    type: string
                    description: The HTTP method to use for the form.
                    example: POST
                  SCRIPT:
                    type: string
                    description: Script to be included to display the form (if applicable).
                    example: ""
                  HTML:
                    type: string
                    description: HTML content for rendering the payment section.
                    example: >
                      <section id="gateway_payment_section" data-hostedpage="https://example.com">
                      <div>
                        Click the button below to proceed to Payment Gateway and process your payment.
                      </div>
                      <script src="https://demo.stg.axcelerate.com/Assets/Scripts/accounting/ecommerce/checkout/generic.js"></script>
                      </section>
                  ACTION:
                    type: string
                    description: The URL to which the form should be submitted.
                    example: "https://example.com/f61fdc8c"
  /accounting/ecommerce/payment/ref/{reference}:
    get:
      tags:
        - Accounting Checkout
      summary: Retrieve state of payment flow
      description: Returns the current state of a payment flow process.
      operationId: retrieveStateOfPaymentFlow
      parameters:
        - name: reference
          required: true
          in: path
          schema:
            type: string
            example: ''
          description: External identifier for the payment flow process.
      responses:
        '200':
          description: 'A PaymentFlow object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentFlow'
  /accounting/transaction:
    get:
      tags:
        - Accounting Payment
      summary: Search for payments by a contact
      description: |
        Retrieve a list of transactions for a contact.

        To determine which invoices a payment has been applied to, use the
        `includeFragments` paramater.
      operationId: searchForPaymentsByAContact
      parameters:
        - name: contactId
          in: query
          schema:
            type: integer
            example: 13955776
          description: >-
            The contact to search the transaction against. This should be the
            person who paid.
        - name: includeFragments
          in: query
          schema:
            type: boolean
            example: true
          description: Optionally include a fragments array with each transaction.
      responses:
        '200':
          description: 'A list of Payment Transaction objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentTransaction'
    post:
      tags:
        - Accounting Payment
      summary: Create a new payment for invoice or contact
      description: Create a new payment transaction for a contact and apply to an invoice.
      operationId: createANewPaymentForInvoiceOrContact
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  description: >-
                    The contact to record the transaction against. This should
                    be the person who paid.
                  type: integer
                  example: 13968282
                amount:
                  description: Transaction amount in dollars.
                  type: number
                  example: 150.75
                invoiceId:
                  description: >-
                    If applied, this transaction will be recorded and then
                    applied against this invoice.
                  type: integer
                  example: 3047133
                reference:
                  description: An optional reference / reciept number.
                  type: string
                  example: 'ABC123'
                description:
                  description: An optional description.
                  type: string
                  example: ''
                transDate:
                  description: The date of the transaction (yyyy-mm-dd). Default will be now.
                  type: string
                  example: '2024-05-02'
                paymentMethodId:
                  description: >-
                    Recorded payment method. The options are: 1=Cash, 2=Credit
                    Card, 4=Direct Deposit, 5=Cheque, 6=EFTPOS.
                  type: string
                  enum:
                    - '1'
                    - '2'
                    - '4'
                    - '5'
                    - '6'
                  default: '2'
                bankBSB:
                  description: Optional. For cheque types (5).
                  type: string
                  example: ''
                bankName:
                  description: Optional. For cheque types (5).
                  type: string
                  example: ''
                chequeDrawer:
                  description: Optional. For cheque types (5).
                  type: string
                  example: ''
                chequeNr:
                  description: Optional. For cheque types (5).
                  type: string
                  example: ''
              required:
                - contactId
                - amount
      responses:
        '200':
          description: 'A list of Payment Transaction objects.'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PaymentTransaction'
  /contactCategories:
    get:
      tags:
        - Categories
      summary: Retrieve contact categories
      description: Retrieve a list of contact categories.
      operationId: retrieveContactCategories
      responses:
        '200':
          description: 'A list of Contact Category objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactCategory'
  /trainingCategories:
    get:
      tags:
        - Categories
      summary: Retrieve training categories
      description: Retrieve all defined training categories.
      operationId: retrieveTrainingCategories
      responses:
        '200':
          description: 'A list of Training Category objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingCategory'
  /contact/sources:
    get:
      tags:
        - Categories
      summary: Retrieve contact sources
      description: >-
        A source is a marketing tool that lets you track how contacts heard
        about your organisation or service.
      operationId: retrieveContactSources
      parameters:
        - name: onlyPublic
          in: query
          schema:
            type: string
            example: 'true'
          description: Set to true to return only publicly exposed marketing sources.
        - name: onlyActive
          in: query
          schema:
            type: string
            example: 'true'
          description: Set to true to return only currently active marketing sources.
      responses:
        '200':
          description: 'A list of Contact Source objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactSource'
  /contact/enrolment/certificate:
    get:
      tags:
        - Certificate
      summary: Retrieve a certificate for an enrolment
      description: >-
        Retrieve an issued certificate PDF for a completed enrolment.
        At a minimum, use one of `enrolId` or `statusId` parameters to
        retrieve the certificate:


        The PDF will be returned as a base64 string.
      operationId: retrieveACertificateForAnEnrolment
      parameters:
        - name: contactId
          in: query
          schema:
            type: integer
            description: The ID of the contact to retrieve the certificate for.
            example: 6531423
          required: false
        - name: enrolId
          in: query
          schema:
            type: integer
            description: The ID of the accredited enrolment to retrieve the certificate for.
            example: 14520487
          required: false
        - name: statusId
          in: query
          schema:
            type: integer
            description: The ID of the non-accredited enrolment to retrieve the certificate for.
            example: 2448565
          required: false
      responses:
        '200':
          description: 'Response containing the base64 encoded certificate PDF.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  CERTIFICATE:
                    type: string
                    format: byte
                    description: Base64 encoded certificate PDF.
                    example: 'JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDYgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nI2TzW7bMAwUHJvZmlsZSB0eXBlCmVuZHN0cmVhbQplbmRvYmoKMyAwIG9iago8PC9UeXBlL1hPYmplY3QvQ29sb3JTcGFjZS9EZXZpY2VHcmF5L0NvbG9yU3BhY2UvU3VidHlwZS9UeXBlL0ZvbnQvQmFzZUZvbnQvQmFzZU'
  /contact/enrolment/verifyCertificate/{certificateId}:
    get:
      tags:
        - Certificate
      summary: Verify a certificate
      description: >-
        Verify a certificate with the given certificate ID. The response will
        include information about the document, result, and any relevant
        messages.
      operationId: verifyACertificate
      parameters:
        - name: certificateId
          required: true
          in: path
          description: The ID of the certificate to verify.
          schema:
            type: string
            example: '6531423-8918096'
      responses:
        '200':
          description: 'A successful verification response containing the certificate details.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  DOCUMENT:
                    type: object
                    properties:
                      HAVEFILE:
                        type: boolean
                        description: Indicates whether the document file is available.
                      DETAIL:
                        type: object
                        properties:
                          AWARDTYPE:
                            type: string
                            example: SOA
                            description: The type of award (e.g., "SOA").
                          CONTACTID:
                            type: integer
                            example: 6531423
                            description: The unique identifier for the contact.
                          GIVENNAME:
                            type: string
                            example: Thomas
                            description: The given name of the contact.
                          SURNAME:
                            type: string
                            example: Jefferson
                            description: The surname of the contact.
                          ENROLID:
                            type: integer
                            example: 14520487
                            description: The unique identifier for the enrolment.
                          ISSUEDBY:
                            type: string
                            example: 'ACME Training'
                            description: The entity that issued the award.
                          ACTIVITYNAME:
                            type: string
                            example: 'Certificate III in Business'
                            description: The name of the activity or course.
                  RESULT:
                    type: boolean
                    description: Indicates whether the operation was successful.
                  MSG:
                    type: string
                    description: A message describing the result of the operation.
  /contact:
    post:
      tags:
        - Contact
      summary: Create a new contact
      description: |
        Create a new Contact. This endpoint will not search for any existing contacts, but rather create a new one.
        If you end up creating a duplicate contact, they can be merged later from within aXcelerate.


        **Custom Fields**

        Contact Custom Field values may be added by specifying their variable name prefixed by `customField_` EG: `customField_region`,
        `customField_specialty`. Values used should correspond to the custom field specified. Note: this will not create custom fields, they
        must already exist.

        If updating a custom field that supports multiple values, you can use comma-delimited values or a JSON array. If using comma-delimited,
        it is expected the data is URL encoded first. For example, to get 2 values: 'A,B' and 'C' you would either pass: "['A,B','C']" or "A%2CB,C".
      operationId: createANewContact
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: 'Basic details of the newly created Contact.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  EMAILADDRESS:
                    type: string
                    format: email
                    description: "The email address of the contact."
                    example: "jim.jeffreys@axcelerate.com"
                  CONTACTID:
                    type: integer
                    description: "The unique identifier for the contact."
                    example: 13971189
                  SURNAME:
                    type: string
                    description: "The surname of the contact."
                    example: "Jeffreys"
                  GIVENNAME:
                    type: string
                    description: "The given name of the contact."
                    example: "Jim"
  /contact/{contactId}:
    get:
      tags:
        - Contact
      summary: Retrieve an existing contact
      description: Retrieve a specific Contact.
      operationId: retrieveAnExistingContact
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: '6531423'
      responses:
        '200':
          description: 'A Contact object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
    put:
      tags:
        - Contact
      summary: Update a contact
      description: |
        Update an existing Contact.


        **Custom Fields**

        Contact Custom Field values may be added by specifying their variable name prefixed by `custom_field_` EG: `custom_field_region`,
        `custom_field_specialty`. Values used should correspond to the custom field specified. Note: this will not create custom fields, they
        must already exist.

        If updating a custom field that supports multiple values, you can use comma-delimited values or a JSON array. If using comma-delimited,
        it is expected the data is URL encoded first. For example, to get 2 values: 'A,B' and 'C' you would either pass: "['A,B','C']" or "A%2CB,C".
      operationId: updateAContact
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: 6531423
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: 'A Contact object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
  /contact/{contactId}/uploadPhoto:
    post:
      tags:
        - Contact
      summary: Add a contact photo
      description: Add a contact photo to a contact's profile.
      operationId: addAContactPhoto
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: 6531423
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photoFile:
                  type: string
                  format: binary
      responses:
        '200':
          description: 'Response with a success message.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  MESSAGE:
                    type: string
                    description: 'Success message'
                    example: 'Photo uploaded successfully.'
                  SUCCESS:
                    type: boolean
                    description: 'Indicates if the operation was successful.'
                    example: true
                  OVERWRITE:
                    type: boolean
                    description: 'Indicates if the photo was overwritten.'
                    example: false
  /contacts/search:
    get:
      tags:
        - Contact
      summary: Search for contacts
      description: |
        Search for contacts using one or more of the following parameters to filter the results.

        This method will return an array of contacts matching all the search parameters.

        The field values must be an exact match OR start with the supplied parameters (i.e. wildcard on the right of the string).
        You can choose to search on almost any field or use the param `q` to perform search across these fields:
        - Given Name
        - Preferred Name
        - Middle Name
        - Surname
        - Email Address
        - Mobile Phone
      operationId: searchForContacts
      parameters:
        - name: q
          in: query
          schema:
            type: string
            description: A Search String. i.e. q='Jeff Bezos'.
            example: 'Jeff Bezos'
        - name: optionalID
          in: query
          schema:
            type: string
            example: AX1100
        - name: contactID
          in: query
          schema:
            type: integer
            example: 6341338
        - name: contactIds
          in: query
          schema:
            type: string
            description: Comma-separated list of contact IDs. This can be used in conjunction with other filters.
            example: '6341338,6341339'
        - name: emailAddress
          in: query
          schema:
            type: string
            format: email
            example: jeff.bezos@axcelerate.com
        - name: givenName
          in: query
          schema:
            type: string
            example: Jeff
        - name: surname
          in: query
          schema:
            type: string
            example: broadhurst
        - name: lastUpdated
          in: query
          schema:
            type: string
            example: '2024-05-07'
        - name: contactEntryDate
          in: query
          schema:
            type: string
            description: The date the contact was entered into the system.
            example: '2024-01-20'
        - name: displayLength
          in: query
          schema:
            type: integer
            example: 70
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            example: 0
            default: 0
      responses:
        '200':
          description: 'A list of Contact objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
  /log/contactMergeHistory:
    post:
      tags:
        - Contact
      summary: Search for merged contacts
      description: |
        Search for merged contacts using one or more of the following parameters to filter the results.
        This method will return an array of contacts matching all the search parameters.

        This endpoint is particularly useful for identifying contacts that have been merged together
        allowing you to correctly sync your data with aXcelerate.

        An alternative to relying on checking this endpoint is to utilise the `contact_merged` webhook event.
      operationId: searchForMergedContacts
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                dateStart:
                  type: string
                  example: '2024-01-01 00:00:00'
                dateEnd:
                  type: string
                  example: '2024-01-04 23:59:59'
                mergedByContactID:
                  type: integer
                  example: 6341338
                oldContactID:
                  type: integer
                  example: 6341339
                currentContactID:
                  type: integer
                  example: 6341340
              required:
                - dateStart
                - dateEnd
      responses:
        '200':
          description: 'Where the search was successful, a list of Contact Merge History objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    USERID:
                      type: integer
                      description: The unique identifier for the user associated with the old contact.
                      example: 726322
                      nullable: true
                    MERGEDTIME:
                      type: integer
                      description: Time in miliseconds that it took to perform the merge action.
                      example: 1485
                    MERGEDUTC:
                      type: string
                      description: The UTC timestamp of when the contact was merged.
                      example: "2023-07-23 04:29"
                    CURRENTCONTACTID:
                      type: integer
                      description: The current contact ID after the merge.
                      example: 8801
                    OLDCONTACTID:
                      type: integer
                      description: The old contact ID before the merge.
                      example: 1872391
                    MERGEDBY:
                      type: integer
                      description: The Contact ID of the user who performed the merge.
                      example: 12345
                    MERGED:
                      type: boolean
                      description: Indicates whether the contact has been merged.
                      example: true
                    DELETED:
                      example: false
                      type: boolean
                      description: |
                        Indicates whether the contact has been deleted.
                        This will be true where the contact was not merged, but deleted.
  /contact/noteTypes:
    get:
      tags:
        - Categories
        - Contact Note
      summary: Retrieve contact note types
      description: |
        Retrieve a list of note types available in the system.

        Note types are used to categorise notes recorded against contacts.
      operationId: retrieveContactNoteTypes
      responses:
        '200':
          description: 'A list of Contact Note Type objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactNoteType'
  /contact/note:
    post:
      tags:
        - Contact Note
      summary: Create a contact note
      description: |
        Create a note for a specific contact.

        A copy of the note can be emailed to other contacts by specifying their contact ID in the `emailNote` array.
      operationId: createAContactNote
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  type: integer
                  description: The ID of the contact to record the note against.
                  example: 12661901
                contactNote:
                  type: string
                  description: The note to record against the contact.
                  example: this is the note I want to record
                noteTypeID:
                  type: integer
                  description: The ID of the note type.
                  example: 123
                emailNote:
                  type: array
                  items:
                    type: integer
                    description: A list of Contact IDs to email the note to.
                    example: 12661901
              required:
                - contactId
                - contactNote
      responses:
        '200':
          description: 'Response containing outcome and newly created noteId.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  NOTEID:
                    type: integer
                    description: The unique identifier for the note.
                    example: 123456
                  MESSAGE:
                    type: string
                    description: 'Message indicating the outcome of the operation.'
                    example: 'Note was added to Contact: 12661901'
                  STATUS:
                    type: boolean
                    description: 'Status indicating the outcome of the operation.'
                    example: "success"
  /contact/notes/{contactId}:
    get:
      tags:
        - Contact Note
      summary: Retrieve contact notes
      description: Retrieve a list of notes for a specific contact.
      operationId: retrieveContactNotes
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: 6531423
        - name: search
          in: query
          schema:
            type: string
            example: 'student feedback'
          description: Search string to filter notes.
        - name: hideSystemNotes
          in: query
          schema:
            type: boolean
            example: false
            default: false
          description: Set to true to hide system notes.
        - name: purgeCache
          in: query
          schema:
            type: boolean
            example: false
            default: false
          description: Set to true to purge the cache and force system to retrive from database.
        - name: offset
          in: query
          schema:
            type: integer
            example: 0
            default: 0
          description: Paging, start at record X.
        - name: displayLength
          in: query
          schema:
            type: integer
            example: 10
            default: 10
          description: Paging, total number of records to retrieve.
      responses:
        '200':
          description: 'A list of Contact Note objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactNote'
  /contact/{contactId}/message:
    get:
      tags:
        - Contact Message
      summary: Retrieve a contact's message
      description: Retrieve the message assigned to a specific contact.
      operationId: retrieveAContactSMessage
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: 6531423
      responses:
        '200':
          description: 'A Contact Message object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactMessage'
    put:
      tags:
        - Contact Message
      summary: Update a contact's message
      description: Update the message assigned to a contact.
      operationId: updateAContactSMessage
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: 6531423
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactMessage'
      responses:
        '200':
          description: 'A Contact Message object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactMessage'
  /contact/portfolio:
    get:
      tags:
        - Contact Portfolio
      summary: Retrieve a contact's portfolio
      description: Retrieve documents and data stored in a contact's portfolio
      operationId: retrieveAContactSPortfolio
      parameters:
        - name: contactId
          required: true
          in: query
          description: The ID of the contact to retrieve the portfolio for.
          schema:
            type: integer
            example: 6531423
        - name: portfolioId
          in: query
          description: The ID of the portfolio item to retrieve.
          schema:
            type: integer
            example: 123456
        - name: portfolioTypeId
          in: query
          description: The ID of the client defined Portfolio Type. These IDs can be found by checking Portfolio Types endpoint.
          schema:
            type: integer
            example: 789
        - name: portfolioChecklistID
          in: query
          description: |
            If provided, portfolio objects will be returned which match those in the checklist.

            Missing items will be returned as placeholders with `PORTFOLIOID` = `0`. These can be found by checking endpoint Portfolio Checkslists endpoint.
          schema:
            type: integer
            example: 456
        - name: isCRICOS
          in: query
          description: |
            If provided, will return the documents against the defined CRICOS checklist. The output is the same as passing a `portfolioChecklistId`.

            This feature must be enabled and the checklist must defined in the client's System Settings or an error will be thrown.
          schema:
            type: boolean
            default: false
            example: false
      responses:
        '200':
          description: |
            Where the request contains a portfolioId, a single PortfolioItem object will be returned.

            Where the request does not contain a portfolioId, an array of PortfolioItem objects will be returned.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PortfolioItem'
                  - type: array
                    items:
                      $ref: '#/components/schemas/PortfolioItem'
    put:
      tags:
        - Contact Portfolio
      summary: Update a portfolio item.
      description: Update document or data stored in a contact's portfolio
      operationId: updateContactPortfolioItem
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  type: integer
                  description: The ID of the contact to update the portfolio for.
                  example: 6531423
                portfolioId:
                  type: integer
                  description: The ID of the portfolio item to update.
                  example: 123456
                portfolioTypeId:
                  type: integer
                  description: The ID of the client defined Portfolio Type. These IDs can be found by checking Portfolio Types endpoint.
                  example: 789
                number:
                  type: string
                  description: The number of the portfolio item.
                  example: '123456'
                dateIssued:
                  type: string
                  description: The date the portfolio item was issued.
                  example: '2024-01-01'
                dateExpires:
                  type: string
                  description: The date the portfolio item expires.
                  example: '2025-01-01'
                issuedBy:
                  type: string
                  description: The entity that issued the portfolio item.
                  example: 'ACME Training'
                details:
                  type: string
                  description: Additional details about the portfolio item.
                  example: 'This is a sample portfolio item.'
                registration:
                  type: string
                  description: The registration number of the portfolio item. Used only for Registration type portfolio objects.
                  example: '2AA'
                name:
                  type: string
                  description: The name of the portfolio item. Used only for Qualification type portfolio objects.
                  example: 'First Aid Certificate'
                specialty:
                  type: string
                  description: The specialty of the portfolio item. Used only for Qualification type portfolio objects.
                  example: 'First Aid'
                startDate:
                  type: string
                  description: The start date of the portfolio item. Used only for Qualification type portfolio objects.
                  example: '2024-01-01'
                status:
                  type: string
                  description: |
                    Used only for Qualification type portfolio objects and only for clients who have enabled the system setting.
                    Valid values are: Completed, Commenced, Attended, Suspended, Canceled, Withdrawn, and Pending
                  example: 'Completed'
              required:
                - contactId
                - portfolioId
      responses:
        '200':
          description: 'A PortfolioItem object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioItem'
  /course:
    post:
      tags:
        - Course
      summary: Create a new course
      description: Create a new Workshop Type
      operationId: createANewCourse
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [programCode, program]
              properties:
                programCode:
                  description: Program Code for new Workshop Type instance
                  type: string
                  example: 'HLTAID011'
                program:
                    description: Title for new Workshop Type instance
                    type: string
                    example: 'Provide First Aid'
                cost:
                      description: The cost per student for new Workshop Type instance
                      type: string
                      example: ''
                shortDescription:
                      description: The short Description for new Workshop Type instance
                      type: string
                      example: ''
                GST_type:
                  description: GST type; 0- no GST, 1- GST included, 2 - GST excluded
                  type: integer
                  enum: [0, 1, 2]
                  example: '0'
                optionalID:
                  description: The optionalID for new Workshop Type instance
                  type: string
                  example: ''
      responses:
        '200':
          description: 'Course created successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  PROGRAMCODE:
                    type: string
                    example: "HLTAID011"
                  MESSAGE:
                    type: string
                    example: "Workshop Type Created."
                  PROGRAMCODEID:
                    type: integer
                    example: 105777
                  STATUS:
                    type: string
                    example: "success"

  /courses:
    get:
      tags:
        - Course
      summary: Search for courses
      description: Search for courses
      operationId: searchForCourses
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            example: 12345
          description: ID of the course to filter.
        - name: searchTerm
          in: query
          schema:
            type: string
            example: 'First Aid'
          description: The term to use when filtering activities.
        - name: type
          in: query
          schema:
            type: string
            enum: [w, p, el, all]
            example: ''
          description: >-
            Course type to return. w = workshop, p = accredited program, el =
            e-learning, all = All types.
        - name: trainingArea
          in: query
          schema:
            type: string
            example: 'Online'
          description: Training Area (Training Category) to search.
        - name: current
          in: query
          schema:
            type: boolean
            default: true
            example: ''
          description: Current courses flag. True to show only current courses.
        - name: public
          in: query
          schema:
            type: boolean
            default: true
            example: ''
          description: >-
            Whether to include public courses only. If false, returns all course
            types regardless of public settings.
        - name: isActive
          in: query
          schema:
            type: boolean
            example: ''
          description: >-
            Whether to include active/inactive courses only. By default both
            will be included.
        - name: lastUpdated_min
          in: query
          schema:
            type: string
            example: '2025-03-01 00:00'
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The course last updated date must be
            greater than or equal to this datetime. Courses last updated prior
            to Nov 2018 may not appear. Time is optional and in client's current
            timezone. Only applicable to w or p types.
        - name: lastUpdated_max
          in: query
          schema:
            type: string
            example: '2025-03-18 23:59'
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The course last updated date must be
            less than or equal to this datetime. Courses last updated prior to
            Nov 2018 may not appear. Time is optional and in client's current
            timezone. Only applicable to w or p types.
        - name: offset
          in: query
          schema:
            type: integer
            example: 0
            default: 0
          description: Paging, start at record X
        - name: displayLength
          in: query
          schema:
            type: integer
            example: 10
            default: 10
          description: Paging, total number of records to retrieve.
        - name: sortColumn
          in: query
          schema:
            type: integer
            example: 1
            default: 1
          description: Column index to sort results by.
        - name: sortDirection
          in: query
          schema:
            type: string
            enum: [ASC, DESC]
            example: 'ASC'
            default: 'ASC'
          description: Sort by direction 'ASC' or 'DESC'.
      responses:
        '200':
          description: |
            An array of Course objects.

            These objects could be one of the following types: Workshop, Qualification or E-Learning.
            Some properties are specific to the type of course (for example, Qualifications do not have
            the concept of duration and duration type).

            Each object will include RowID and Count properties that are specific to this endpoint.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Course'
                    - type: object
                      properties:
                        ROWID:
                          type: integer
                          example: 1
                        COUNT:
                          type: integer
                          example: 103
  /course/detail:
    get:
      tags:
        - Course
      summary: Retrieve details for a Course
      description: Retrieve details for a Workshop Type, Qualification or E-Learning
      operationId: retrieveCourseDetails
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            example: 368
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum: [w, p, el]
            example: p
          required: true
      responses:
        '200':
          description: |
            Depending on the type of course, the response will be either a
            `CourseDetailWorkshop`, `CourseDetailQualification` or `CourseDetailElearning` object.

            Each of these objects contain similar properties, but some are specific to the type of course.
            Some properties are also redundant and will always return null for a specific type of course (i.e. `Duration` on a Qualification
            or `LastUpdateUtc` on Elearning).
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CourseDetailWorkshop'
                  - $ref: '#/components/schemas/CourseDetailElearning'
                  - $ref: '#/components/schemas/CourseDetailQualification'
                discriminator:
                  propertyName: type
                  mapping:
                    w: '#/components/schemas/CourseDetailWorkshop'
                    p: '#/components/schemas/CourseDetailQualification'
                    el: '#/components/schemas/CourseDetailElearning'
  /venues:
    post:
      tags:
        - Course
      summary: Search for venues
      description: Search for Venues using any related venue field.
      operationId: searchForVenues
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactID:
                  description: The ID of the related Contact.
                  type: integer
                  example: 6432069
                mobilePhone:
                  description: Venue Contact mobile phone.
                  type: string
                  example: ''
                name:
                  description: The Name of the Venue.
                  type: string
                  example: ''
                displayLength:
                  description: Maximum number of records to return (up to a system maximum of 100)
                  type: integer
                  default: 10
                  example: 10
                offset:
                  description: Used for paging - start at record.
                  type: integer
                  default: 0
                  example: 0
                sAddress1:
                  description: Venue address line 1.
                  type: string
                  example: ''
                sAddress2:
                  description: Venue address line 2.
                  type: string
                  example: ''
                sCity:
                  description: Venue City.
                  type: string
                  example: ''
                sPostcode:
                  description: Venue Post Code.
                  type: string
                  example: ''
                sState:
                  description: Venue State.
                  type: string
                  example: ''
      responses:
        '200':
          description: 'An array of Venue objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Venue'
                    - type: object
                      properties:
                        ROWID:
                          type: integer
                          example: 1
                        COUNT:
                          type: integer
                          example: 103
  /course/enquire:
    post:
      tags:
        - Course
      summary: Create a course enquiry
      description: Create a course enquiry
      operationId: createACourseEnquiry
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ID:
                  description: >-
                    The ID relating to the course type. Leave blank or don't
                    include for a general enquiry.
                  type: string
                  example: '33623'
                comments:
                  description: The content of the enquiry.
                  type: string
                  example: hello, I am interested
                contactID:
                  description: >-
                    The contactID of the user. This is the value returned by the
                    create contact API method.
                  type: string
                  example: '6341338'
                emailTo:
                  description: >-
                    An email to send the enquiry to. It can be a comma delimited
                    list of emails. If blank, an email will not be sent.
                  type: string
                  example: joe@dirt.com
                noteCodeID:
                  description: >-
                    The noteCodeID for the aXcelerate note to attach to the
                    contact. If left blank will default to leaving a system
                    message
                  type: string
                  example: '37816'
                type:
                  description: >-
                    The course type. w = workshop, p = accredited program, el =
                    e-learning. Don't use this param for a general enquiry.
                  type: string
                  example: w
      responses:
        '200':
          description: ''
  /course/instances:
    get:
      tags:
        - Course Instance
      summary: Retrieve course instances
      description: Retrieve instances of an activity type.
      operationId: retrieveCourseInstances
      parameters:
        - name: id
          in: query
          schema:
            type: string
            example: '107128'
          description: Id of the course the instance belongs to
        - name: type
          in: query
          schema:
            type: string
            example: w
          description: >-
            The type of the activity. w = workshop, p = accredited program, el =
            e-learning.
        - name: public
          in: query
          schema:
            type: string
            example: 'true'
          description: >-
            Whether to include public courses only. If false, returns ALL course
            instances for type 'w' and 'el'. For type 'p', passing false will
            return ONLY non-public classes.
        - name: current
          in: query
          schema:
            type: string
            example: 'false'
          description: >-
            Whether to include only current courses. A current course instance
            is a course that is currently running, or coming up. If false,
            returns all couse instances.
        - name: isActive
          in: query
          schema:
            type: string
            example: '0'
          description: >-
            Whether to include active/inactive courses instances only. By
            default both will be included.
        - name: enrolmentOpen
          in: query
          schema:
            type: string
            example: 'true'
          description: >-
            Relating to the course instance dates and respective 'close' days
            and time.
        - name: lastUpdated_min
          in: query
          schema:
            type: string
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The course instance last updated date
            must be greater than or equal to this datetime. Instances last
            updated prior to Nov 2018 may not appear. Time is optional and in
            client's current timezone. Only applicable to w or p types.
        - name: lastUpdated_max
          in: query
          schema:
            type: string
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The course instance last updated date
            must be less than or equal to this datetime. Instances last updated
            prior to Nov 2018 may not appear. Time is optional and in client's
            current timezone. Only applicable to w or p types.
      responses:
        '200':
          description: ''
  /course/instance/search:
    post:
      tags:
        - Course Instance
      summary: Search course instances
      description: Advanced and flexible search for instances of courses.
      operationId: searchCourseInstances
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                code:
                  description: 'The course code to search – Uses Like operator: code%.'
                  type: string
                  example: ''
                deliveryLocationId:
                  description: >-
                    For type = p only. The unique ID of an accredited delivery
                    location, reported to NCVER. Refers to locations listed
                    under the course/deliveryLocations endpoint.
                  type: string
                  example: ''
                displayLength:
                  description: >-
                    Currently the API will cache the query for 30 seconds –
                    Setting this flag to true gets the latest data.
                  type: string
                  example: ''
                domainID:
                  description: >-
                    The DomainID the instance belongs to (the domainID of the
                    user).
                  type: string
                  example: ''
                enrolmentOpen:
                  description: Return Course Instances that are open for enrolment.
                  type: string
                  example: 'false'
                finishDate_max:
                  description: >-
                    The course finish date must be less than this date. Null
                    values will also be returned for el and p types.
                  type: string
                  example: ''
                finishDate_min:
                  description: >-
                    The course finish date must be greater than this date. Null
                    values will also be returned for el and p types.
                  type: string
                  example: ''
                groupedCourseId:
                  description: >-
                    Whether to include public courses. If false, returns only
                    In-House course instances.
                  type: string
                  example: ''
                groupedCourseName:
                  description: Sort by direction 'ASC' or 'DESC'.
                  type: string
                  example: ''
                id:
                  description: The Activity Type ID.
                  type: string
                  example: '107128'
                instanceID:
                  description: The Instance Id to search.
                  type: string
                  example: ''
                isActive:
                  description: Paging, total records to retrieve.
                  type: string
                  example: ''
                lastUpdated_max:
                  description: >-
                    In 'YYYY-MM-DD hh:mm' format with time optional. The course
                    instance last updated date must be less than or equal to
                    this datetime.
                  type: string
                  example: ''
                lastUpdated_min:
                  description: >-
                    In 'YYYY-MM-DD hh:mm' format with time optional. The course
                    instance last updated date must be greater than or equal to
                    this datetime. NOTE: lastUpdated_min & max must be used
                    together (unless ID is passed) and can be up to 90 days
                    apart. These fields are mutually exclusive with start and
                    finish date min/max searches and are both ignored if
                    instanceID is passed.
                  type: string
                  example: ''
                location:
                  description: >-
                    The course location to search – Uses Like operator %value%.
                    Only works with type 'w' instances.
                  type: string
                  example: ''
                name:
                  description: The course name to search – Uses Like operator %name%
                  type: string
                  example: API
                offset:
                  description: Include or exclude Deleted / Archived and Inactive courses.
                  type: string
                  example: ''
                orgId:
                  description: The organisation ID of the Client Contact of the course.
                  type: string
                  example: ''
                orgIdTree:
                  description: >-
                    The Client Contact of the course is either this Organisation
                    ID or a child organisation of this Organisation ID.
                  type: string
                  example: ''
                public:
                  description: Paging, start at record X.
                  type: string
                  example: ''
                purgeCache:
                  description: Column index to sort results by.
                  type: string
                  example: ''
                searchTerm:
                  description: For a general search use this paramater.
                  type: string
                  example: ''
                sortColumn:
                  description: >-
                    If the Grouped Workshop Data flag is on in your account, you
                    can search by the Grouped Course Name (Type W Only).
                  type: string
                  example: ''
                sortDirection:
                  description: >-
                    If the Grouped Workshop Data flag is on in your account, you
                    can search by the Grouped Course ID (Type W Only).
                  type: string
                  example: ''
                startDate_max:
                  description: >-
                    The course start date must be less than this date. Null
                    values will also be returned for el and p types. Ignored if
                    instanceID is provided.
                  type: string
                  example: ''
                startDate_min:
                  description: >-
                    The course start date must be greater than this date. Null
                    values will also be returned for el and p types. Ignored if
                    instanceID is provided.
                  type: string
                  example: ''
                state:
                  description: >-
                    The course State to search – works with type 'w' & 'p'
                    instances.
                  type: string
                  example: ''
                trainerContactID:
                  description: >-
                    The ContactID of the Trainer/Consultant the instance is
                    assigned to.
                  type: string
                  example: ''
                trainingCategory:
                  description: The Training Category to Search – Uses Like operator %value%
                  type: string
                  example: ''
                type:
                  description: >-
                    The type of the activity. w = workshop, p = accredited
                    program, el = e-learning, all = workshops, accredited
                    programs and e-learning.
                  type: string
                  example: ''
      responses:
        '200':
          description: ''
  /course/instance:
    put:
      tags:
        - Course Instance
      summary: Update a course instance
      description: >-
        Update a specific activity instance. Only applicable to instances of a
        Workshop.
      operationId: updateACourseInstance
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FWBRate:
                  description: FWB Rate
                  type: string
                  example: '11.11'
                GST_type:
                  description: GST type; 0- no GST, 1- GST included, 2 - GST excluded.
                  type: string
                  example: '2'
                accom:
                  description: Is accommodation required?
                  type: string
                  example: 'false'
                closeDays:
                  description: >-
                    Close Days. If provided without closeMinutes parameter -
                    Closes will be calculated 'at midnight'.
                  type: string
                  example: '3'
                closeMinutes:
                  description: >-
                    Close Minutes. If provided - Closes will be calculated
                    'before start time'
                  type: string
                  example: '45'
                comments:
                  description: Comments for the activity.
                  type: string
                  example: Students will need their laptops.
                consultantId:
                  description: Contact ID of the Trainer for the activity.
                  type: string
                  example: '13955224'
                contactID:
                  description: Contact ID of the Owner for the activity.
                  type: string
                  example: '6432498'
                cost:
                  description: Cost per student.
                  type: string
                  example: '99.50'
                customField_[variableName]:
                  description: >-
                    Replace [variableName] with the actual customField variable
                    name to set a customField value against the enrolment (if
                    enabled and set up). If updating a custom field that
                    supports multiple values, you can use comma-delimited values
                    or a JSON array. If using comma-delimited, it is expected
                    the data is URL encoded first. For example, to get 2 values:
                    'A,B' and 'C' you would either pass: "['A,B','C']" or
                    "A%2CB,C".
                  type: string
                  example: ''
                dateDescriptor:
                  description: >-
                    Specific to type 'w' - The Date Descriptor (e.g. Between 2-5
                    PM on Friday the 12/07/2024).
                  type: string
                  example: Second Two Day Course
                domainID:
                  description: Domain ID of the activity.
                  type: string
                  example: '2705'
                durationType:
                  description: >-
                    Specific to type 'w' - The Duration Type i.e: hour, hours,
                    day, days, half-day, session, sessions.
                  type: string
                  example: days
                estimatedParticipants:
                  description: >-
                    Specific to type 'w' - The Estimated Participants expected
                    to enrol.
                  type: string
                  example: '25'
                facilitatorFee:
                  description: Facilitator Fee
                  type: string
                  example: '25'
                facilitatorInvRec:
                  description: Facilitator InvRec
                  type: string
                  example: 'false'
                finCodeID:
                  description: Valid finCodeID.
                  type: string
                  example: ''
                id:
                  description: ID of the activity to be updated.
                  type: string
                  example: '1890222'
                inclusions:
                  description: What are the inclusions?
                  type: string
                  example: This is what is included.
                jobCardId:
                  description: Job Card Id
                  type: string
                  example: ''
                location:
                  description: Location for the activity.
                  type: string
                  example: Postman Parade
                maxParticipants:
                  description: Specific to type 'w' - The Maxium Participants.
                  type: string
                  example: '25'
                minParticipants:
                  description: Specific to type 'w' - The Minimum Participants.
                  type: string
                  example: '1'
                pDuration:
                  description: Specific to type 'w' - The Duration numerical value.
                  type: string
                  example: '2'
                pFinishDate:
                  description: Finish date for the activity.
                  type: string
                  example: '2024-07-18'
                pFinishTime:
                  description: Finish time for the activity.
                  type: string
                  example: '17:00'
                pStartDate:
                  description: Start date for the activity
                  type: string
                  example: '2024-07-15'
                pStartTime:
                  description: Start time for the activity.
                  type: string
                  example: '08:00'
                pType:
                  description: >-
                    Specific to type 'w' -  Coordination type of the Workshop.
                    Valid types are: 'In-House', 'Public Workshop', 'Timetabled
                    Unit'.
                  type: string
                  example: Public Workshop
                programName:
                  description: The activity name.
                  type: string
                  example: Updated - A two day learnings about APIs
                syncDateDescriptor:
                  description: >-
                    Specific to type 'w' - Date Descriptor field will be
                    automatically set based on workshop start and finish dates
                  type: string
                  example: 'true'
                travel:
                  description: Is travel required?
                  type: string
                  example: 'false'
                type:
                  description: >-
                    The activity type of the activity. w = workshop, p =
                    accredited program, el = e-learning.
                  type: string
                  example: w
      responses:
        '200':
          description: ''
    post:
      tags:
        - Course Instance
      summary: Create a new workshop instance
      description: Create a new instance of a Workshop Type.
      operationId: createANewWorkshopInstance
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FWBRate:
                  description: FWB Rate
                  type: string
                  example: '21'
                GST_type:
                  description: GST type; 0- no GST, 1- GST included, 2 - GST excluded.
                  type: string
                  example: '2'
                accom:
                  description: Is accommodation required?
                  type: string
                  example: 'false'
                closeDays:
                  description: >-
                    Close Days. If provided without closeMinutes parameter -
                    Closes will be calculated 'at midnight'.
                  type: string
                  example: '2'
                closeMinutes:
                  description: >-
                    Close Minutes. If provided - Closes will be calculated
                    'before start time'
                  type: string
                  example: '45'
                comments:
                  description: Comments for the activity.
                  type: string
                  example: Bring your best attitude.
                contactID:
                  description: Contact ID of the Owner for the activity.
                  type: string
                  example: '10141719'
                cost:
                  description: Cost per student.
                  type: string
                  example: '177'
                customField_[variableName]:
                  description: >-
                    Replace [variableName] with the actual customField variable
                    name to set a customField value against the enrolment (if
                    enabled and set up). If updating a custom field that
                    supports multiple values, you can use comma-delimited values
                    or a JSON array. If using comma-delimited, it is expected
                    the data is URL encoded first. For example, to get 2 values:
                    'A,B' and 'C' you would either pass: "['A,B','C']" or
                    "A%2CB,C".
                  type: string
                  example: ''
                dateDescriptor:
                  description: >-
                    Specific to type 'w' - The Date Descriptor (e.g. Between 2-5
                    PM on Friday the 12/07/2024).
                  type: string
                  example: Second Two Day Course
                domainID:
                  description: Domain ID of the activity.
                  type: string
                  example: '2705'
                duration:
                  description: Specific to type 'w' - The Duration numerical value.
                  type: string
                  example: '2'
                durationType:
                  description: >-
                    Specific to type 'w' - The Duration Type i.e: hour, hours,
                    day, days, half-day, session, sessions.
                  type: string
                  example: days
                estimatedParticipants:
                  description: >-
                    Specific to type 'w' - The Estimated Participants expected
                    to enrol.
                  type: string
                  example: '25'
                facilitatorFee:
                  description: Facilitator Fee
                  type: string
                  example: '25'
                facilitatorInvRec:
                  description: Facilitator InvRec
                  type: string
                  example: 'false'
                finCodeID:
                  description: Valid finCodeID.
                  type: string
                  example: ''
                finishDate:
                  description: Finish date for the activity.
                  type: string
                  example: '2024-08-17'
                finishTime:
                  description: Finish time for the activity.
                  type: string
                  example: '17:00'
                id:
                  description: >-
                    The Type ID of the activity you want to Create - For now:
                    the API can only create Workshop Instances (accredited [a
                    linked class will be created] / non-accredited).
                  type: string
                  example: '49030'
                inclusions:
                  description: What are the inclusions?
                  type: string
                  example: This is what is included.
                jobCardId:
                  description: Job Card Id
                  type: string
                  example: ''
                location:
                  description: Location for the activity.
                  type: string
                  example: Williams Run
                maxParticipants:
                  description: Specific to type 'w' - The Maxium Participants.
                  type: string
                  example: '25'
                minParticipants:
                  description: Specific to type 'w' - The Minimum Participants.
                  type: string
                  example: '1'
                name:
                  description: The activity name.
                  type: string
                  example: Third Acred two day learnings about APIs
                public:
                  description: >-
                    For Type of 'W', Public refers to the Coordination Type.
                    In-House (0), Public Workshop (1).
                  type: string
                  example: '0'
                startDate:
                  description: Start date for the activity
                  type: string
                  example: '2024-08-16'
                startTime:
                  description: Start time for the activity.
                  type: string
                  example: '08:00'
                syncDateDescriptor:
                  description: >-
                    Specific to type 'w' - Date Descriptor field will be
                    automatically set based on workshop start and finish dates
                  type: string
                  example: 'true'
                trainerContactID:
                  description: Contact ID of the Trainer for the activity.
                  type: string
                  example: '6531197'
                travel:
                  description: Is travel required?
                  type: string
                  example: 'false'
                type:
                  description: >-
                    The activity type of the activity. w = workshop, p =
                    accredited program, el = e-learning.
                  type: string
                  example: w
      responses:
        '200':
          description: ''
  /course/instance/detail:
    get:
      tags:
        - Course Instance
      summary: Retrieve additional course instance detail
      description: Retrieve details of an activity instance.
      operationId: retrieveAdditionalCourseInstanceDetail
      parameters:
        - name: instanceID
          in: query
          schema:
            type: string
            example: '1890224'
          description: Instance ID of the activity you want details from.
        - name: type
          in: query
          schema:
            type: string
            example: w
          description: >-
            The activity type of the activity. w = workshop, p = accredited
            program, el = e-learning.
        - name: includeAssociatedWorkshops
          in: query
          schema:
            type: string
            example: 'true'
          description: >-
            You can chose to include workshops associated to units (type P
            only).
      responses:
        '200':
          description: ''
  /course/instance/attendance:
    get:
      tags:
        - Course Instance Attendance
      summary: Retrieve workshop session attendance
      description: Retrieve the attendance records for a Workshop with Sessions.
      operationId: retrieveWorkshopSessionAttendance
      parameters:
        - name: instanceId
          in: query
          schema:
            type: string
            example: '1890225'
          description: Instance ID of the Workshop you want to retrieve the attendance for.
        - name: contactId
          in: query
          schema:
            type: string
            example: '13955230'
          description: The Contact ID of the student.
        - name: complexId
          in: query
          schema:
            type: string
            example: '5437056'
          description: The Complex ID of the Session.
      responses:
        '200':
          description: ''
    put:
      tags:
        - Course Instance Attendance
      summary: Record workshop session attendance
      description: Set the attendance records for a Workshop with Sessions.
      operationId: recordWorkshopSessionAttendance
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                arrival:
                  description: The date and time the student arrived (yyyy-mm-dd hh:mm).
                  type: string
                  example: 2024-07-03 11:35
                attended:
                  description: The attended flag, 1 = attended, 0 = did not attend.
                  type: string
                  example: '1'
                comment:
                  description: Associate a comment with this attendance record.
                  type: string
                  example: so lazy they came late and left early.
                complexId:
                  description: The Complex ID of the Session.
                  type: string
                  example: '5437056'
                contactId:
                  description: The Contact ID of the student.
                  type: string
                  example: '13955229'
                departure:
                  description: The date and time the student departed (yyyy-mm-dd hh:mm).
                  type: string
                  example: 2024-07-03 13:47
                instanceId:
                  description: >-
                    Instance ID of the Workshop you want to update attendance
                    for.
                  type: string
                  example: '1890225'
      responses:
        '200':
          description: ''
  /course/instance/extratrainer/{instanceId}:
    get:
      tags:
        - Course Instance Extra Trainer
      summary: Retrieve additional trainers for a workshop
      description: Retrieve Extra Trainers that are assigned to a Workshop Instance.
      operationId: retrieveAdditionalTrainersForAWorkshop
      parameters:
        - name: instanceId
          required: true
          in: path
          schema:
            type: integer
            example: 1890225
          description: Instance ID of the Workshop you want to retrieve the extra trainers for.
        - name: extraConsId
          in: query
          schema:
            type: string
            example: '97295'
          description: Extra Trainer ID (not related to Contact ID)
        - name: consultantId
          in: query
          schema:
            type: string
            example: '13955224'
          description: Contact ID of the Trainer
      responses:
        '200':
          description: ''
    put:
      tags:
        - Course Instance Extra Trainer
      summary: Update billing values for additional trainer
      description: >-
        Update an additional trainer on a workshop that is not included on a
        session.
      operationId: updateBillingValuesForAdditionalTrainer
      parameters:
        - name: instanceId
          required: true
          in: path
          schema:
            type: integer
            example: 1890225
          description: Instance ID of the Workshop you want to update Extra Trainers for.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                extraConsId:
                  description: Extra Trainer ID (not related to Contact ID)
                  type: string
                  example: '97294'
                invReceived:
                  description: Invoice received (1 or 0).
                  type: string
                  example: '0'
                quantity:
                  description: Quantity value for the specified type
                  type: string
                  example: '3'
                rate:
                  description: Rate for the Client
                  type: string
                  example: '52'
                rateCons:
                  description: Rate value for the Trainer
                  type: string
                  example: '21'
                rateType:
                  description: Rate type (hours, sessions, days, halfdays)
                  type: string
                  example: days
      responses:
        '200':
          description: ''
    post:
      tags:
        - Course Instance Extra Trainer
      summary: Add additional trainer to workshop
      description: >-
        Add an additional trainer to a workshop that is not included on a
        session.
      operationId: addAdditionalTrainerToWorkshop
      parameters:
        - name: instanceId
          required: true
          in: path
          schema:
            type: integer
            example: 1890225
          description: Instance ID of the Workshop where you want to create extra trainers.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                consultantId:
                  description: Contact ID of the Trainer
                  type: string
                  example: '13955224'
                invReceived:
                  description: Invoice received (1 or 0).
                  type: string
                  example: '0'
                quantity:
                  description: Quantity value for the specified type
                  type: string
                  example: '5'
                rate:
                  description: Rate for the Client
                  type: string
                  example: '50'
                rateCons:
                  description: Rate value for the Trainer
                  type: string
                  example: '25'
                rateType:
                  description: Rate type (hours, sessions, days, halfdays)
                  type: string
                  example: hours
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Course Instance Extra Trainer
      summary: Delete an additional workshop trainer
      description: Delete an Extra Trainer from a Workshop Instance.
      operationId: deleteAnAdditionalWorkshopTrainer
      parameters:
        - name: instanceId
          required: true
          in: path
          schema:
            type: integer
            example: 1890225
          description: Instance ID of the Workshop where you want to delete an extra trainer.
        - name: extraConsId
          in: query
          schema:
            type: string
            example: '97295'
          description: Extra Trainer ID (not related to Contact ID)
      responses:
        '200':
          description: ''
  /course/instance/complexdate/{instanceId}:
    get:
      tags:
        - Course Instance Session
      summary: Retrieve sessions for a workshop
      description: Retrieve Sessions for a Workshop instance (Complex Dates).
      operationId: retrieveSessionsForAWorkshop
      parameters:
        - name: instanceId
          required: true
          in: path
          description: Instance ID of the Workshop you want to retrieve the sessions for.
          schema:
            type: integer
            example: 1890225
        - name: complexId
          in: query
          schema:
            type: string
            example: '5437048'
        - name: withVenue
          in: query
          schema:
            type: string
            example: '1'
        - name: withEquipmentList
          in: query
          schema:
            type: string
            example: '1'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Course Instance Session
      summary: Create a session for a workshop
      description: Create a new session for a Workshop.
      operationId: createASessionForAWorkshop
      parameters:
        - name: instanceId
          required: true
          in: path
          description: Instance ID of the Workshop you want to retrieve the sessions for.
          schema:
            type: integer
            example: 1890225
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                breakDuration:
                  description: Break duration (in minutes) for the new session.
                  type: string
                  example: '9'
                complexDate:
                  description: Date for the new session.
                  type: string
                  example: '2024-07-07'
                complexFinish:
                  description: Finish time for new session.
                  type: string
                  example: '17:00'
                complexStart:
                  description: Start time for new session.
                  type: string
                  example: '10:00'
                consultantID:
                  description: Contact ID of the Trainer for the session.
                  type: string
                  example: '6533788'
                description:
                  description: Description for the new session.
                  type: string
                  example: A Complex API Session Creation
                location:
                  description: Location for new session.
                  type: string
                  example: '46566'
                packupDuration:
                  description: Packup duration (in minutes) for the new session.
                  type: string
                  example: '10'
                roomId:
                  description: Room ID for new session.
                  type: string
                  example: ''
                sessionFinishTime:
                  description: Session start time for new session.
                  type: string
                  example: '15:00'
                sessionStartTime:
                  description: Session start time for new session.
                  type: string
                  example: '11:00'
                setupDuration:
                  description: Setup duration (in minutes) for the new session.
                  type: string
                  example: '8'
                trainerFinishTime_[6533788]:
                  description: Session finish time of the individual trainer
                  type: string
                  example: '14:45'
                trainerIds:
                  description: >-
                    Array of trainers on the sesson. Example
                    [trainerId,trainerId]. Trainer session details are updated
                    based on the aXcelerate system settings.
                  type: string
                  example: '[6533788]'
                trainerStartTime_[6533788]:
                  description: Session start time of the individual trainer
                  type: string
                  example: '12:00'
                venueId:
                  description: Venue ID for the new session.
                  type: string
                  example: ''
      responses:
        '200':
          description: ''
  /customFields:
    get:
      tags:
        - Custom Field
      summary: Retrieve and search custom fields
      description: Retrieve and search custom fields
      operationId: retrieveAndSearchCustomFields
      parameters:
        - name: variableName
          in: query
          schema:
            type: string
            example: VSRF_address
        - name: label
          in: query
          schema:
            type: string
            example: date created
        - name: linkTo
          in: query
          schema:
            type: string
            example: workshop
        - name: type
          in: query
          schema:
            type: string
            example: date
        - name: active
          in: query
          schema:
            type: string
            example: 'false'
        - name: mandatory
          in: query
          schema:
            type: string
            example: 'true'
        - name: availableToExternal
          in: query
          schema:
            type: string
            example: 'false'
        - name: offset
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
    post:
      tags:
        - Custom Field
      summary: Create a custom field
      description: Create a custom field
      operationId: createACustomField
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                active:
                  description: Whether the field is active or not.
                  type: string
                  example: '1'
                availableToExternal:
                  description: The field is avilable externally.
                  type: string
                  example: '1'
                id:
                  type: string
                  example: ''
                label:
                  description: The field label for the Custom Field.
                  type: string
                  example: Favourite Colour
                linkTo:
                  description: >-
                    Where the Custom Field links to. Available options are
                    [contact,classEnrolment,class,workshop,workshopBooking,organisation,marketingAgent,portfolio,studentActivity,enrolmentGroup,unitEnrolment].
                  type: string
                  example: workshop
                mandatory:
                  description: >-
                    Require the field to be present when creating or updating
                    the associated object.
                  type: string
                  example: '0'
                options:
                  description: >-
                    For Custom Fields where a list of values are needed. One of
                    the listed types must be used
                    [select,radio,select-multi,checkbox]. The options parameter
                    must be urlEncoded.
                  type: string
                  example: '["One", "Two","Three"]'
                type:
                  description: >-
                    The the of Custom Field - i.e. Text, Select, Radio.
                    Available options are
                    [text,number,date,textarea,html,url,select,radio,select-multi,checkbox].
                  type: string
                  example: select
                variableName:
                  description: >-
                    The internal name of the Custom Field, used for setting the
                    value in other endpoints i.e. customField_ant : red.
                  type: string
                  example: favourite_colour
      responses:
        '200':
          description: ''
  /customFields/{customFieldId}:
    get:
      tags:
        - Custom Field
      summary: Retrieve a single custom field
      description: Retrieve a single custom field
      operationId: retrieveASingleCustomField
      parameters:
        - name: customFieldId
          required: true
          in: path
          description: The ID of the custom field you want to retrieve.
          schema:
            type: integer
            example: 18761
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Custom Field
      summary: Delete a single custom field
      description: Delete a single custom field
      operationId: deleteASingleCustomField
      parameters:
        - name: customFieldId
          required: true
          in: path
          description: The ID of the custom field you want to delete.
          schema:
            type: integer
            example: 18761
      responses:
        '200':
          description: ''
    put:
      tags:
        - Custom Field
      summary: Update existing custom field
      description: Update existing custom field
      operationId: updateExistingCustomField
      parameters:
        - name: customFieldId
          required: true
          in: path
          description: The ID of the custom field you want to update.
          schema:
            type: integer
            example: 18761
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                active:
                  type: string
                  example: '0'
                availableToExternal:
                  type: string
                  example: '1'
                label:
                  type: string
                  example: Favourite Colours
                mandatory:
                  type: string
                  example: '0'
                options:
                  type: string
                  example: red,blue,green
                variableName:
                  type: string
                  example: favourite_colours
      responses:
        '200':
          description: ''
  /course/deliveryLocations:
    get:
      tags:
        - Delivery Location
      summary: Retrieve all delivery locations
      description: Retrieve all delivery locations
      operationId: retrieveAllDeliveryLocations
      responses:
        '200':
          description: ''
  /discounts:
    get:
      tags:
        - Discount
      summary: Retrieve and search discounts
      description: Searches and returns system discounts.
      operationId: retrieveAndSearchDiscounts
      parameters:
        - name: status
          in: query
          schema:
            type: string
            example: ''
          description: >-
            Used for searching the status of a discount. Possible values are:
            ACTIVE, INACTIVE, and EXPIRED
        - name: discountTypeID
          in: query
          schema:
            type: string
            example: ''
          description: >-
            The type of discount you are looking for (eg '1=Early Bird'). See
            below for a list of discount types. This field also supports more
            than one value as a list.
        - name: globalCourses
          in: query
          schema:
            type: string
            example: ''
          description: If 'true', the discount applies to all courses.
        - name: type
          in: query
          schema:
            type: string
            example: w
          description: >-
            The type of course (w, p, el). If passed with one of instanceID or
            ID, you can return all discounts linked to that course.
        - name: instanceID
          in: query
          schema:
            type: string
            example: '1890063'
          description: The instanceID of the course.
        - name: ID
          in: query
          schema:
            type: string
            example: ''
          description: The ID of the course type.
        - name: directlyLinkedOnly
          in: query
          schema:
            type: string
            example: ''
          description: >-
            Used when searching via courses to pull back discounts that are
            directly linked only - not those only linked to the type or global.
      responses:
        '200':
          description: ''
  /course/discounts:
    get:
      tags:
        - Discount
      summary: Calculate a course discount
      description: >-
        Calculates potential discount values given a course instance, a contact,
        an originalPrice and any other additional information, including group
        booking size, promo codes etc. It also brings back information on the
        discounts that were applied. This discountIDs as well as the
        revisedPrice should be passed into the enrol method to properly apply
        these discounts to the enrolment.
      operationId: calculateACourseDiscount
      parameters:
        - name: contactID
          in: query
          schema:
            type: string
            example: '13955224'
          description: >-
            The contactID - will check against membership, category and
            organisation discounts.
        - name: type
          in: query
          schema:
            type: string
            example: w
          description: The type of course (w, p, el).
        - name: instanceID
          in: query
          schema:
            type: string
            example: '1890063'
          description: The instanceID of the course.
        - name: originalPrice
          in: query
          schema:
            type: string
            example: '100'
          description: >-
            The original price of the course. This is the value that will be
            used to calculate the correct discounted price (returned as
            revisedPrice in the return struct).
        - name: groupBookingSize
          in: query
          schema:
            type: string
            example: ''
          description: >-
            The size of a group booking. Used to find any applicable group
            booking discounts.
        - name: bookingDate
          in: query
          schema:
            type: string
            example: ''
          description: Used to find promo discounts.
        - name: promoCode
          in: query
          schema:
            type: string
            example: ''
          description: >-
            Used when searching via courses to pull back discounts that are
            directly linked only - not those only linked to the type or global.
        - name: concessionDiscountIDs
          in: query
          schema:
            type: string
            example: ''
          description: >-
            A list of discountIDs of specific concession discounts. Only
            concession type discounts will apply here and only those that are
            linked to this course will be considered.
        - name: bookingInfo
          in: query
          schema:
            type: string
            example: ''
          description: >-
            A JSON formatted string of any additional information that may
            affect discounts.
      responses:
        '200':
          description: ''
  /domain:
    post:
      tags:
        - Domain
      summary: Create a new domain
      description: Create a new domain
      operationId: createANewDomain
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  description: The name of the domain.
                  type: string
                  example: 'Offshore'
              required:
                - name
      responses:
        '200':
          description: A single domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
  /domain/{domainId}:
    get:
      tags:
        - Domain
      summary: Retrieve an existing domain
      description: Retrieve an existing domain
      operationId: retrieveAnExistingDomain
      parameters:
        - name: domainId
          required: true
          in: path
          schema:
            type: integer
            example: 2705
          description: The ID of the domain you want to retrieve.
      responses:
        '200':
          description: A single domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
  /domains:
    get:
      tags:
        - Domain
      summary: Retrieve all domains
      description: Retrieve all domains
      operationId: retrieveAllDomains
      responses:
        '200':
          description: An array of Domain objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain'
  /contact/enrolments/{contactId}:
    get:
      tags:
        - Enrolment
      summary: Retrieve a contact's enrolments
      description: Retrieve a contact's enrolments
      operationId: retrieveAContactSEnrolments
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: '6531423'
        - name: instanceID
          in: query
          schema:
            type: string
            example: '1597109'
        - name: type
          in: query
          schema:
            type: string
            example: el
      responses:
        '200':
          description: ''
  /course/enrolments:
    get:
      tags:
        - Enrolment
      summary: Retrieve course enrolment(s)
      description: Retrieve one or more Contacts enrolled in a Class or Workshop.
      operationId: retrieveCourseEnrolmentS
      parameters:
        - name: contactId
          in: query
          schema:
            type: string
            example: ''
          description: The ID of the Contact.
        - name: type
          in: query
          schema:
            type: string
            example: ''
          description: >-
            The type of the activity. w = workshop, p = accredited program.
            These are they only supported types for this endpoint.
        - name: instanceId
          in: query
          schema:
            type: string
            example: ''
          description: The ID of the Activity Instance.
        - name: ID
          in: query
          schema:
            type: string
            example: ''
          description: >-
            The ID Activity Type - Use this in combination with
            enrolmentDateLaterThan for performance.
        - name: orgID
          in: query
          schema:
            type: string
            example: ''
          description: The ID of the Organisation.
        - name: includeOrgChildren
          in: query
          schema:
            type: string
            example: ''
          description: >-
            When used in conjunction with orgID, will also return enrolments
            related to children of that organisation.
        - name: enrolmentDateLaterThan
          in: query
          schema:
            type: string
            example: ''
          description: >-
            Get enrolments after this date. NOTE: this is restricted to 30 days.
            If you wish to retrieve enrolments older than 30 days, please use
            the lastUpdated or enrolmentDate min/max params. WARNING:Results
            will be limited to 25 unless also passing an ID parameter.
        - name: lastUpdated_min
          in: query
          schema:
            type: string
            example: ''
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The enrolment last updated date must
            be greater than or equal to this datetime. Enrolments last updated
            prior to Nov 2018 may not appear. Time is optional and in client's
            current timezone. NOTE: lastUpdated_min & max must be used together
            and can be up to 90 days apart.
        - name: lastUpdated_max
          in: query
          schema:
            type: string
            example: ''
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The enrolment last updated date must
            be less than or equal to this datetime. Enrolments last updated
            prior to Nov 2018 may not appear. Time is optional and in client's
            current timezone.
        - name: enrolmentDate_min
          in: query
          schema:
            type: string
            example: ''
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The enrolment date must be greater
            than or equal to this datetime. Time is optional and in client's
            current timezone. NOTE: enrolmentDate_min & max must be used
            together and can be up to 30 days apart.
        - name: enrolmentDate_max
          in: query
          schema:
            type: string
            example: ''
          description: >-
            In 'YYYY-MM-DD hh:mm' format. The enrolment date must be less than
            or equal to this datetime. Time is optional and in client's current
            timezone.
        - name: offset
          in: query
          schema:
            type: string
            example: ''
          description: Paging, start at record X.
        - name: limit
          in: query
          schema:
            type: string
            example: ''
          description: Paging, total records to retrieve.
        - name: filterType
          in: query
          schema:
            type: string
            example: ''
          description: >-
            Filter related activities. s = show Subjects and related eLearning,
            el = show related eLearning only. Only s & el works at this time. To
            use this filter you must also pass a contactID for the student.
      responses:
        '200':
          description: ''
  /course/enrolment:
    put:
      tags:
        - Enrolment
      summary: Update a course enrolment
      description: Update a student's enrolment.
      operationId: updateACourseEnrolment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                AddElectiveUnit:
                  description: '[Type=P] List of Unit IDs to add to the elective list.'
                  type: string
                  example: ''
                AddElectiveUnitByCode:
                  description: >-
                    [Type=P] List of Unit/Subject Codes to add to the elective
                    list.
                  type: string
                  example: ''
                AddUnitCompetency:
                  description: '[Type=P] List of Unit IDs to add to the enrolment.'
                  type: string
                  example: ''
                AddUnitCompetencyByCode:
                  description: '[Type=P] List of Unit/Subject Codes to add to the enrolment.'
                  type: string
                  example: ''
                CIDApprenticeships:
                  description: >-
                    [Type=P] The traineeship/apprenticeship client identifier.
                    Maximum of 10 characters.
                  type: string
                  example: ''
                DateCommenced:
                  description: '[Type=P] The Activity Commencement Date.'
                  type: string
                  example: ''
                DateCompleted:
                  description: '[Type=P] The Actual Completion Date.'
                  type: string
                  example: ''
                DateCompletionExpected:
                  description: '[Type=P] The Expected Completion Date.'
                  type: string
                  example: ''
                DateEnrolled:
                  description: '[Type=P,Type=S] The Date the Contact Enrolled.'
                  type: string
                  example: ''
                FundingNational:
                  description: >-
                    AVETMISS Funding Source - National (For Accredited
                    enrolments) - See sample table below for values.
                  type: string
                  example: ''
                FundingState:
                  description: >-
                    AVETMISS Funding Source - State (For Accredited enrolments)
                    - See sample table below for values.
                  type: string
                  example: ''
                ModuleIDList:
                  description: '[Type=P] List of Module IDs to add (VSL only).'
                  type: string
                  example: ''
                PONum:
                  description: '[Type=W] Purchase Order Number.'
                  type: string
                  example: ''
                PSTACDateVIC:
                  description: >-
                    [Type=P] Program Supervised Teaching Activity Completion
                    Date - Victoria. Must be a valid date and should be less
                    than or equal to the final subject activity end date.
                  type: string
                  example: ''
                TCID2:
                  description: >-
                    [Type=P] The training/apprenticeship contract identifier.
                    Maximum of 10 characters.
                  type: string
                  example: ''
                activityEndDate:
                  description: '[Type=S,Type=EL] Activity End Date.'
                  type: string
                  example: ''
                activityStartDate:
                  description: '[Type=S,Type=EL] Activity Start Date.'
                  type: string
                  example: ''
                additionalComments:
                  description: >-
                    [Type=W] Participant Enrolment (General) Comments (see also
                    'comments' for Status related commets).
                  type: string
                  example: ''
                allowDuplicateEntry:
                  description: '[Type=W] Allow duplicate status entry for a Participant.'
                  type: string
                  example: ''
                commencedWhileAtSchool:
                  description: >-
                    [Type=P] Commenced While at School Flag for Victorian
                    AVETMISS reporting.
                  type: string
                  example: ''
                comments:
                  description: '[Type=S,Type=W,Type=EL] Comments (Brief Comment).'
                  type: string
                  example: withdrawn api
                competent:
                  description: >-
                    [Type=S] competency code - To update a Subject use the
                    UnitID as the InstanceID & ContactID. See Competency Code
                    table below (use the integer value).
                  type: string
                  example: '40'
                concessionTypeID:
                  description: '[Type=S] Concesssion Type ID.'
                  type: string
                  example: ''
                contactID:
                  description: The ID of the Contact.
                  type: string
                  example: '6403325'
                cost:
                  description: '[Type=S] Subject Cost.'
                  type: string
                  example: ''
                costHourlyRate:
                  description: '[Type=S] Cost Hourly Rate - Victoria.'
                  type: string
                  example: ''
                customField_[variableName]:
                  description: >-
                    Replace [variableName] with the actual customField variable
                    name to update a customField value against the enrolment (if
                    enabled and set up). If updating a custom field that
                    supports multiple values, you can use comma-delimited values
                    or a JSON array. If using comma-delimited, it is expected
                    the data is URL encoded first. For example, to get 2 values:
                    'A,B' and 'C' you would either pass: "['A,B','C']" or
                    "A%2CB,C".
                  type: string
                  example: ''
                deliveryLocationId:
                  description: '[Type=S] Delivery Location ID.'
                  type: string
                  example: ''
                deliveryModeAVETMISS:
                  description: >-
                    [Type=S] Delivery Mode - AVETMISS. This is to be used for
                    AVETMISS 8.0 reporting. Provide a comma-delimited list of
                    the applicable delivery modes character codes listed under
                    "Samples" below. The first value will be treated as the
                    predominant delivery mode for reporting purposes. Note that
                    delivery mode is typically stored against a subject OR a
                    course insteance (type=P), so these values will not be
                    affected by this endpoint. Examples: "I", "W,E", "E,I,W".
                  type: string
                  example: ''
                deliveryModeRAPT:
                  description: >-
                    [Type=S] Delivery Mode - RAPT/TAMS. This is to be used for
                    RAPT 3.0+ reporting. Provide a comma-delimited list of the
                    applicable delivery modes character codes listed under
                    "Samples" below. The second and third values will be
                    reported as supplementary delivery modes. All values after
                    that will not be reported. Note that the value "Z - Not
                    Applicable" cannot be supplied, as this is calculated
                    dynamically based on the competency status. Note also that
                    delivery mode is typically stored against a subject OR a
                    course insteance (type=P), so these values will not be
                    affected by this endpoint. Examples: "C", "E,S".
                  type: string
                  example: ''
                discountIDs:
                  description: >-
                    [Type=W] Any discount IDs that should apply to the
                    Participant.
                  type: string
                  example: ''
                doNotReportAvetmiss:
                  description: >-
                    [Type=S] A flag to prevent this record from being exported
                    in AVETMISS reports.
                  type: string
                  example: ''
                enrolmentStatus:
                  description: >-
                    Updates the enrolment to one of the following statuses:

                    [Type=P]

                    'tent' - Tentative. Rules: No subject enrolments may exist

                    'ip' - In Progress.

                    'canc' - Cancelled. Rules: No interim subject enrolments may
                    exist

                    'def' - Deferred.

                    'susp' - Suspended.

                    'comp' - Completed. Rules: No interim subject enrolments may
                    exist


                    [Type=EL]

                    'A' - Approved

                    'Cm' - Commenced / In Progress.

                    'C' - Cancelled.

                    'F' - Failed.

                    'Co' - Completed.

                    If an enrolment status change is not successful, no changes
                    will be applied to the enrolment.
                  type: string
                  example: canc
                finCodeID:
                  description: >-
                    [Type=W & P] The Finance Code ID associated with the
                    Participant.
                  type: string
                  example: ''
                financeModelID:
                  description: >-
                    [Type=P] The Finance Model ID to be associated with the
                    Participant.
                  type: string
                  example: ''
                fundingEligibilityKeyVIC:
                  description: >-
                    [Type=P] Funding Eligibility Key - Victoria. Maximum 10
                    characters alphanumeric.
                  type: string
                  example: ''
                hasRPL:
                  description: '[Type=P] Update VET Student Loans RPL data (VSL only).'
                  type: string
                  example: ''
                hostEmployerOrgID:
                  description: >-
                    [Type=S] Host Employer Organisation ID for AVETMISS
                    Workplace ABN (VIC).
                  type: string
                  example: ''
                hoursAttended:
                  description: '[Type=S] Hours attended.'
                  type: string
                  example: ''
                instanceID:
                  description: >-
                    The ID of the Activity Instance. (Not required when using
                    subjectCode).
                  type: string
                  example: '675876'
                invoiceNum:
                  description: '[Type=W] The Invoice ID associated with the Participant.'
                  type: string
                  example: ''
                logEntryDate:
                  description: '[Type=W,Type=EL] The date the new status was requested'
                  type: string
                  example: ''
                logType:
                  description: |-
                    [Type=W] Change/add status entry for a Participant:
                    'Tentative' - Tentative.
                    'Booked' - Booked / In Progress.
                    'Cancelled' - Cancelled.
                    'Invoiced' - Invoice has been sent.
                    'Paid' - Invoice has been paid.
                    'Completed' - Completed.
                  type: string
                  example: ''
                noFunding:
                  description: '[Type=S] Not Funded / RAPT/TAMS Funding Removed flag.'
                  type: string
                  example: ''
                outcomeTrainingOrg:
                  description: >-
                    [Type=S] competency code - internal (outcome identifier -
                    training organisation).
                  type: string
                  example: ''
                pleaseSyncLADates:
                  description: >-
                    [Type=S] Flag to synchronise (related) Learning Activity
                    Dates.
                  type: string
                  example: ''
                primaryScheduleID:
                  description: '[Type=S] Primary Schedule ID.'
                  type: string
                  example: ''
                programInstanceID:
                  description: >-
                    This is required when updating a subject enrolment.
                    (InstanceID of the Accredited Program)
                  type: string
                  example: '675876'
                programUniqueSupervisedHoursVIC:
                  description: >-
                    [Type=P] Program Unique Supervised Hours - Victoria. Must be
                    within range 0-99999.5.
                  type: string
                  example: ''
                proposedEndDate:
                  description: '[Type=S] Proposed End Date.'
                  type: string
                  example: ''
                scheduleID:
                  description: '[Type=S] Schedule ID.'
                  type: string
                  example: ''
                scheduledHours:
                  description: '[Type=S] Scheduled Hours.'
                  type: string
                  example: ''
                schoolOrgID:
                  description: >-
                    [Type=P] Organisation that represents the school for this
                    enrolment.
                  type: string
                  example: ''
                schoolTypeID:
                  description: >-
                    [Type=P] School Type Identifier AVETMISS field. See samples
                    below for valid values.
                  type: string
                  example: ''
                stageDate_[currentStage]:
                  description: >-
                    [Type=P] Useage: 'stageDate_1'='2014-12-12' to change the
                    stage 1 date.
                  type: string
                  example: ''
                studyReason:
                  description: >-
                    AVETMISS Study Reason - National (For Accredited enrolments)
                    - See sample table below for values.
                  type: string
                  example: ''
                subcontractedOrgID:
                  description: '[Type=S] Subcontracted organisation ID.'
                  type: string
                  example: ''
                subjectCode:
                  description: >-
                    This can be used to update a subject enrolment (instead of
                    InstanceID).
                  type: string
                  example: ''
                tc_aac:
                  description: >-
                    [Type=P] The organisation ID for the AAC associated with the
                    traineeship/apprenticeship.
                  type: string
                  example: ''
                tc_contractType:
                  description: >-
                    [Type=P] The traineeship/apprenticeship contract type.
                    Options: full-time, part-time, school based.
                  type: string
                  example: ''
                tc_dateCommenced:
                  description: '[Type=P] The traineeship/apprenticeship commencement date.'
                  type: string
                  example: ''
                tc_dateCompleted:
                  description: >-
                    [Type=P] The actual completion date of the
                    traineeship/apprenticeship.
                  type: string
                  example: ''
                tc_dateCompletionExpected:
                  description: >-
                    [Type=P] The expected completion date of the
                    traineeship/apprenticeship.
                  type: string
                  example: ''
                tc_dateTrainingPlanCreated:
                  description: >-
                    [Type=P] The traineeship/apprenticeship training plan
                    creation date.
                  type: string
                  example: ''
                tc_durationMonths:
                  description: >-
                    [Type=P] The duration of the traineeship/apprenticeship in
                    months (0-11) - used in combination with tc_durationYears.
                  type: string
                  example: ''
                tc_durationYears:
                  description: >-
                    [Type=P] The duration of the traineeship/apprenticeship in
                    years (0-20) - used in combination with tc_durationMonths.
                  type: string
                  example: ''
                tc_hostEmployer:
                  description: >-
                    [Type=P] The organisation ID for the host employer
                    associated with the traineeship/apprenticeship.
                  type: string
                  example: ''
                tc_status:
                  description: >-
                    [Type=P] The traineeship/apprenticeship status. Options:
                    active, suspended, cancelled, withdrawn, completed.
                  type: string
                  example: ''
                tc_type:
                  description: >-
                    [Type=P] The traineeship/apprenticeship type. Options:
                    traineeship, apprenticeship.
                  type: string
                  example: ''
                theMethod:
                  description: >-
                    [Type=W] How the new status was requested:
                    'Phone,Email,Fax,In Person,Online,Other'
                  type: string
                  example: ''
                trainerID:
                  description: >-
                    [Type=P,Type=S] The Contact ID of the Trainer associated
                    with this enrolment.
                  type: string
                  example: ''
                type:
                  description: >-
                    The type of the activity. w = workshop, p = accredited
                    program, s = subject (of an accredited program), el =
                    e-learning.
                  type: string
                  example: p
                updateClassEnrolmentCompletedOrExpectedDate:
                  description: >-
                    [Type=S] Flag to update class enrolment Completed or
                    Expected completion date (depending on compentency status).
                  type: string
                  example: ''
                vicProgramStatusIDCode:
                  description: >-
                    [Type=P] The Program Status Identifier field for AVETMISS
                    reporting. See Samples below for a full list of options.
                  type: string
                  example: ''
                waEnrolmentCategoryID:
                  description: '[Type=S] WA Enrolment Category ID.'
                  type: string
                  example: ''
      responses:
        '200':
          description: ''
  /course/enrol:
    post:
      tags:
        - Enrolment
      summary: Create a course enrolment
      description: |
        Enrols a Contact in an Activity Instance. This method will also send an email to the student, the payer, and a notification to your administrator.
        Enrolments into linked E-Learning will be scheduled and performed later by the system.

        **Custom Fields**

        Enrolment Custom Field (Workshop Booking or Class Enrolment) values may be added by specifying their variable name prefixed by `customField_` EG: `customField_trainingpack`,
        `customField_interestedIn`. Values used should correspond to the custom field specified. Note: this will not create custom fields, they
        must already exist.

        If adding a custom field that supports multiple values, you can use comma-delimited values or a JSON array. If using comma-delimited,
        it is expected the data is URL encoded first. For example, to get 2 values: 'A,B' and 'C' you would either pass: "['A,B','C']" or "A%2CB,C".
      operationId: createACourseEnrolment
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - contactID
                - instanceID
                - type
              properties:
                contactID:
                  type: integer
                  example: 13969085
                instanceID:
                  type: string
                  example: '1885842'
                type:
                  type: string
                  enum: [w, p, el]
                  example: w
                tentative:
                  type: boolean
                  example: false
                  default: false
                generateInvoice:
                  type: boolean
                  example: true
                  default: true
                  description: |
                    Determines whether you would like a new invoice to be generated as a result of this booking. This will only work if the course cost
                    is greater than $0. This also will not work if your aXcelerate System Settings are set to 'Free Online Bookings'.
                payerId:
                  type: integer
                  example: 13969085
                  description: The ID of the Contact that is paying for the course. If omitted, it will be assumed that the student (contactID) is paying.
                invoiceID:
                  type: integer
                  example: 3047100
                  description: |
                    The ID of the invoice you wish to add this enrolment to.
                    If an invoiceID is not provided, a new invoice will be created where there is a cost.
                PONumber:
                  type: string
                  example: 'PO 123456'
                  description: The Purchase Order number for this enrolment (if applicable).
                lockInvoiceItems:
                  type: boolean
                  example: false
                  default: true
                  description: |
                    If an new invoice is generated, determines whether the items are locked. Leaving items unlocked allows for further enrolments to be added.
                    However, some invoice details can later be changed, such as address and purchase order numbers. Items must be locked before a payment can be applied against an invoice.
                serviceDate:
                  type: string
                  example: '2024-09-08'
                  description: The invoice item service date.
                archiveInvoice:
                  type: boolean
                  example: false
                  default: false
                  description: |
                    If an new invoice is generated, determines whether it is completely locked and archived. Once archived, no invoice details can later be changed.
                    This paramater matches the 'Finalise' checbox within the aXcelerate interface.
                forceBooking:
                  type: boolean
                  example: true
                  default: false
                  description: Before enroling, should the system check if enrolment is closed?
                bookOnDefaultWorkshops:
                  type: boolean
                  example: true
                  default: true
                  description: |
                    If the course is a Class (type = p), this will book the contact into any workshops linked to the Class's units.
                    For this to work, each Unit in the Class can only be linked to a single workshop. An error will be thrown if more
                    than one workshop is against a Class Unit and this parameter is set to true.
                syncDatesWithWorkshop:
                  type: boolean
                  example: true
                  default: true
                  description: |
                    Applicable only to Class enrolments (type = p) and where `bookOnDefaultWorkshops` is true.
                    This will set unit start/end dates to the same as that of the linked workshops.
                syncUOCdates:
                  type: boolean
                  example: false
                  default: false
                  description: |
                    Applicable only to Class enrolments (type = p). Will set the Unit of Competency start and end dates
                    to match those of the Unit. It will only work if `syncDatesWithWorkshop` set to `false`.
                syncWithClassSchedule:
                  type: boolean
                  example: false
                  default: false
                  description: |
                    Applicable only to Class enrolments (type = p) and passing the `dateCommenced` parameter.
                    This will offset all Unit start/end dates based on the offset between the student's date
                    commenced and the class start.
                GST_type:
                  type: string
                  enum: [0, 1]
                  example: 0
                  description: The GST type for the enrolment. 0 = No GST, 1 = GST.
                cost:
                  type: number
                  example: 100.00
                  description: The discounted cost of the enrolment.
                discountIdList:
                  type: string
                  example: '12345,67890'
                  description: |
                    A comma-separated list of discount IDs to apply to the enrolment. Required when `cost` is provided.
                autoGrantCT:
                  type: boolean
                  example: false
                  default: false
                  description: |
                    Applicable to any accredited enrolments. The system will automatically set the Unit outcome to CT for students where
                    it detects a pre-existing competency. This will also prevent the student from being enrolled into any linked workshops
                    or E-Learning for that Unit. Units that expire will not have competencies automatically granted.
                dateCommenced:
                  type: string
                  example: '2024-09-08'
                  description: Applicable only to Class enrolments (type = p) - The Enrolment Commencement Date.
                dateCompletionExpected:
                  type: string
                  example: '2024-12-08'
                  description: Applicable only to Class enrolments (type = p) - The Expected Completion Date. Ignored if using syncWithClassSchedule.
                suppressNotifications:
                  type: boolean
                  example: false
                  default: false
                  description: Option to prevent sending any email booking notifications. Auto-generate user emails will still send.
                sendAdminNotification:
                  type: boolean
                  example: false
                  default: false
                  description: If `suppressNotifications` is true, this allows the admin booking notification to still be sent.
                blockAdminNotification:
                  type: boolean
                  example: false
                  default: false
                  description: Explicitly blocks the admin notification, regardless of suppress setting.
                useRegistrationFormDefaults:
                  type: boolean
                  example: false
                  default: false
                  description: |
                    Used for direct or linked accredited program enrolments (type = p). If true, the system will apply the default enrolment
                    form values set against the system settings. This form can be edited under Settings > Registration Form > Class Enrolment Form.
                studyReasonId:
                  type: integer
                  example: 1
                  description: |
                    AVETMISS Study Reason (For accredited enrolments). See Codes & Identifiers: Study Reason Identifiers.
                fundingNational:
                  type: integer
                  example: 11
                  description: |
                    AVETMISS Funding Source - National (For accredited enrolments). See Codes & Identifiers: Funding National.
                fundingState:
                  type: string
                  example: '2GT'
                  description: |
                    AVETMISS Funding Source - State (For accredited enrolments). See Codes & Identifiers: Funding State.
                marketingAgentContactId:
                  type: integer
                  example: 123456
                  description: |
                    The ID of the Contact that should be set as the marketing agent for the contact.
                commencingProgramCohortIdentifiers:
                  type: string
                  example: '123456'
                  description: Commencing program cohort ID. Maximum of first 6 characters considered.
                PSTACDateVIC:
                  type: string
                  example: ''
                  description: |
                    [Type=P] Program Supervised Teaching Activity Completion Date for Victorian AVETMISS reporting.
                commencedWhileAtSchool:
                  type: boolean
                  example: false
                  default: false
                  description: |
                    [Type=P] Commenced While at School Flag for Victorian AVETMISS reporting.
                extraBookingItemIds:
                  type: string
                  example: '12306'
                  description: A comma-separated list of extra booking item IDs to apply to the enrolment.
      responses:
        '200':
          description: 'A summary containing the cost, invoiceId and learnerId'
          content:
            application/json:
              schema:
                type: object
                properties:
                  INVOICEID:
                    type: integer
                    example: 3047100
                  CONTACTID:
                    type: integer
                    example: 13969085
                  LEARNERID:
                    type: integer
                    example: 13969085
                  AMOUNT:
                    type: string
                    example: "100.00"
  /organisations:
    get:
      tags:
        - Organisation
      summary: Search organisations
      description: >

        This endpoint makes an HTTP GET request to retrieve a list of
        organisations based on the search query and active status. The query
        parameters include 'search' for the search term, 'active' to filter
        active organisations, 'offset' for pagination, and 'displayLength' to
        specify the number of results per page.
      operationId: searchOrganisations
      parameters:
        - name: search
          in: query
          schema:
            type: string
            example: Flowers
          description: The search term to use.
        - name: active
          in: query
          schema:
            type: boolean
            example: 1
          description: >-
            Active status for the organisation. If not provided, both active and
            inactive organisations will be returned.
        - name: offset
          in: query
          schema:
            type: integer
            example: 0
            default: 0
          description: Paging, starting record.
        - name: displayLength
          in: query
          schema:
            type: integer
            example: 10
            default: 10
          description: Paging, maximum number of records to return.
      responses:
        '200':
          description: 'An array of Organisation Summary objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationSummary'
  /organisation:
    post:
      tags:
        - Organisation
      summary: Create an organisation
      description: |
        This endpoint allows you to create a new Organisation record.


        **Custom Fields**

        Organisation Custom Fields values may be added by specifying their variable name prefixed by `custom_field_` EG: `custom_field_region`,
        `custom_field_specialty`. Values used should correspond to the custom field specified. Note: this will not create custom fields, they
        must already exist.

        If updating a custom field that supports multiple values, you can use comma-delimited values or a JSON array. If using comma-delimited,
        it is expected the data is URL encoded first. For example, to get 2 values: 'A,B' and 'C' you would either pass: "['A,B','C']" or "A%2CB,C".
      operationId: createAnOrganisation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  description: Name of the Organisation.
                  type: string
                  example: McGreggor's Farm
                legalName:
                  description: Legal name of the Organisation.
                  type: string
                  example: McGreggor's Farm Pty Ltd
                orgOptionalId:
                  description: An optional identifier to use for this organisation record.
                  type: string
                  example: ''
                parentOrgId:
                  description: Parent Organisation ID.
                  type: integer
                  example: 123456
                employerContactId:
                  description: Contact ID of the Employer.
                  type: integer
                  example: 6533788
                payerContactId:
                  description: Contact ID of the Payer.
                  type: integer
                  example: 6533788
                ABN:
                  description: Australian Business Number.
                  type: integer
                  example: 46010942613
                orgNameAccounting:
                  description: >-
                    Name of the Organisation (used by aXcelerate
                    Accounting/Finance)
                  type: string
                  example: McGreggor's Farm Pty Ltd ATF The Farm People Trust
                organisationNotes:
                  description: Notes field stored against the Organisation
                  type: string
                  example: Give them the farm discount.
                purchaseOrderRequired:
                  description: >-
                    Is a purchase order required when invoicing this
                    organisation?
                  type: boolean
                  example: true
                schoolTypeId:
                  description: >-
                    School Type Identifier AVETMISS field. See (Codes and
                    Identifiers: School Type Identifiers)
                  type: integer
                  example: 21
                categoryIds:
                  description: A list of valid Organisation Category IDs.
                  type: string
                  example: '2253,1255'
                keyContactIds:
                  description: A list of valid Contact IDs.
                  type: string
                  example: '6533788,1465655'
                active:
                  description: Active status of the Organisation.
                  type: boolean
                  example: true
              required:
                - name
      responses:
        '200':
          description: 'Organisation created successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  MESSAGE:
                    type: string
                    description: Message indicating the result of the organisation creation.
                    example: "Organisation Created Successfully"
                  STATUS:
                    type: string
                    description: Status of the organisation creation process.
                    example: "success"
                  ORGID:
                    type: integer
                    description: Unique identifier of the created organisation.
                    example: 256796
  /organisation/{orgId}:
    get:
      tags:
        - Organisation
      summary: Retrieve an existing organisation
      description: Retrieve a specific Organisation record.
      operationId: retrieveAnExistingOrganisation
      parameters:
        - name: orgId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Organisation.
      responses:
        '200':
          description: 'An organisation object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
    put:
      tags:
        - Organisation
      summary: Update an organisation
      description: |
        This endpoint allows you to update an existing Organisation record.

        **Custom Fields**

        Organisation Custom Fields values may be added by specifying their variable name prefixed by `custom_field_` EG: `custom_field_region`,
        `custom_field_specialty`. Values used should correspond to the custom field specified. Note: this will not create custom fields, they
        must already exist.

        If updating a custom field that supports multiple values, you can use comma-delimited values or a JSON array. If using comma-delimited,
        it is expected the data is URL encoded first. For example, to get 2 values: 'A,B' and 'C' you would either pass: "['A,B','C']" or "A%2CB,C".
      operationId: updateAnOrganisation
      parameters:
        - name: orgId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Organisation.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  description: Name of the Organisation.
                  type: string
                  example: McGreggor's Farm
                legalName:
                  description: Legal name of the Organisation.
                  type: string
                  example: McGreggor's Farm Pty Ltd
                orgOptionalId:
                  description: An optional identifier to use for this organisation record.
                  type: string
                  example: ''
                parentOrgId:
                  description: Parent Organisation ID.
                  type: integer
                  example: 123456
                employerContactId:
                  description: Contact ID of the Employer.
                  type: integer
                  example: 6533788
                payerContactId:
                  description: Contact ID of the Payer.
                  type: integer
                  example: 6533788
                ABN:
                  description: Australian Business Number.
                  type: integer
                  example: 46010942613
                orgNameAccounting:
                  description: >-
                    Name of the Organisation (used by aXcelerate
                    Accounting/Finance)
                  type: string
                  example: McGreggor's Farm Pty Ltd ATF The Farm People Trust
                organisationNotes:
                  description: Notes field stored against the Organisation
                  type: string
                  example: Give them the farm discount.
                purchaseOrderRequired:
                  description: >-
                    Is a purchase order required when invoicing this
                    organisation?
                  type: boolean
                  example: true
                schoolTypeId:
                  description: >-
                    School Type Identifier AVETMISS field. See (Codes and
                    Identifiers: School Type Identifiers)
                  type: integer
                  example: 21
                categoryIds:
                  description: A list of valid Organisation Category IDs.
                  type: string
                  example: '2253,1255'
                keyContactIds:
                  description: A list of valid Contact IDs.
                  type: string
                  example: '6533788,1465655'
                active:
                  description: Active status of the Organisation.
                  type: boolean
                  example: true
      responses:
        '200':
          description: 'An organisation object (in an array)'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
  /organisation/{orgId}/children:
    get:
      tags:
        - Organisation
      summary: Retrieve an organisations children
      description: >-
        Retrieve a Children Organisations within the Organisation Tree of a
        specific Organisation record.
      operationId: retrieveAnOrganisationsChildren
      parameters:
        - name: orgId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Organisation.
      responses:
        '200':
          description: 'An Organisation Children object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationChildren'
  /organisation/{orgId}/detail:
    post:
      tags:
        - Organisation Detail
      summary: Create organisation details
      description: Create a detail entry for an existing Organisation
      operationId: createOrganisationDetails
      parameters:
        - name: orgId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Organisation.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  description: "Detail type: 'Street Address' or 'Postal Address'"
                  type: string
                  example: Postal Address
                address1:
                  description: Address Line 1.
                  type: string
                  example: Mac Farm
                address2:
                  description: Address Line 2.
                  type: string
                  example: 347 Farm Road
                city:
                  description: Organisation's City.
                  type: string
                  example: Farmsville
                state:
                  description: Organisation's State.
                  type: string
                  example: QLD
                postCode:
                  description: Organisation's Post Code.
                  type: string
                  example: '4074'
                country:
                  description: Organisation's Country.
                  type: string
                  example: Australia
                emailAddress:
                  description: Email address for the Organisation.
                  type: string
                  example: mac.farm@farmxxxxs.com
                phone:
                  description: Phone number for the Organisation.
                  type: string
                  example: '0421448666'
                fax:
                  description: Fax number for the Organisation.
                  type: string
                  example: '0730543558'
              required:
                - type
                - address1
      responses:
        '200':
          description: 'Outcome of the operation with the Organisation Detail Unique ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  DETAILID:
                    type: integer
                    description: Unique identifier of the created organisation detail.
                    example: 256796
                  MESSAGE:
                    type: string
                    description: Message indicating the result of the organisation detail creation.
                    example: "Organisation Details Created Successfully"
                  STATUS:
                    type: string
                    description: Status of the organisation detail creation process.
                    example: "success"
  /organisation/{orgId}/detail/{detailId}:
    get:
      tags:
        - Organisation Detail
      summary: Retrieve existing organisation details
      description: Retrieve a specific Detail record for an Organistion.
      operationId: retrieveExistingOrganisationDetails
      parameters:
        - name: orgId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Organisation.
        - name: detailId
          required: true
          in: path
          schema:
            type: integer
            example: 524273
          description: The ID of the Detail record.
      responses:
        '200':
          description: 'An organisation detail object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetail'
    put:
      tags:
        - Organisation Detail
      summary: Update organisation details
      description: Update a specific Detail record for an Organistion.
      operationId: updateOrganisationDetails
      parameters:
        - name: orgId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Organisation.
        - name: detailId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Detail record.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  description: "Detail type: 'Street Address' or 'Postal Address'"
                  type: string
                  example: Postal Address
                address1:
                  description: Address Line 1.
                  type: string
                  example: Mac Farm
                address2:
                  description: Address Line 2.
                  type: string
                  example: 347 Farm Road
                city:
                  description: Organisation's City.
                  type: string
                  example: Farmsville
                state:
                  description: Organisation's State.
                  type: string
                  example: QLD
                postCode:
                  description: Organisation's Post Code.
                  type: string
                  example: '4074'
                country:
                  description: Organisation's Country.
                  type: string
                  example: Australia
                emailAddress:
                  description: Email address for the Organisation.
                  type: string
                  example: mac.farm@farmxxxxs.com
                phone:
                  description: Phone number for the Organisation.
                  type: string
                  example: '0421448666'
                fax:
                  description: Fax number for the Organisation.
                  type: string
                  example: '0730543558'
      responses:
        '200':
          description: 'Outcome of the operation with the Organisation Detail Unique ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  DETAILID:
                    type: integer
                    description: Unique identifier of the created organisation detail.
                    example: 256796
                  MESSAGE:
                    type: string
                    description: Message indicating the result of the organisation detail update.
                    example: "Organisation Details Updated Successfully"
                  STATUS:
                    type: string
                    description: Status of the organisation detail update process.
                    example: "success"
  /report/run:
    post:
      tags:
        - Report
      summary: Run a report
      description: This endpoint allows you to run a report with the specified parameters.
      operationId: runAReport
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                reportReference:
                  description: >-
                    The reference for the desired report. This can be found by
                    either querying the api/report/list API, or as the ref
                    parameter in the URL when running the report in aXcelerate.
                    For example, for the Contact Details report is the value is:
                    contactsSimple
                  type: string
                  example: workshopDetails
                selectedFilterFields:
                  description: >-
                    A JSON representation of an array of filter structs to pass
                    to the report. The structs must have the keys: name, value,
                    and operator. For a list of available filters for a report,
                    query the API api/report/fields. For a more comprehensive
                    list of the values and operators available for a field,
                    query the API api/report/field and pass the field name as
                    'fieldReference'. The string is not case sensitive. An
                    example value for the contactsSimple report, to return all
                    contacts with the surname 'Jones' would be:
                    [{name:'vmcontacts.surname', value:'Jones', operator:'IS'}]
                  type: string
                  example: >-
                    [{"name":"workshops.trainercontactid","value":"1238544","operator":"in"}]
                selectedViewFields:
                  description: >-
                    A comma-separated list of field names to include in the
                    report. The list of available fields can be found for a
                    report by querying the api/report/fields API. An example
                    value could be: vmcontacts.surname, vmcontacts.givenName
                  type: string
                  example: >-
                    contacts.contactid,revrec.enrolid,revrec.enrolmentenddate,revrec.recognisedrevenue,revrec.totalenrolmentdays,revrec.totalremainingdays,revrec.enrolmenttotalrevenue,revrec.revrecrecordedvalue,revrec.revrecenrolmentvalue,revrec.revreccommencementvalue,revrec.unrecognisedbalance
      responses:
        '200':
          description: ''
  /report/saved/run:
    post:
      tags:
        - Report
      summary: Run a saved report
      description: >-
        This HTTP POST request is used to run a saved report with the specified
        report ID and filter overrides. The request includes parameters for
        reportID, filterOverride, displayLength, and offsetRows. The
        filterOverride parameter allows for overriding the default filter values
        for the report.
      operationId: runASavedReport
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                displayLength:
                  type: string
                  example: '200'
                filterOverride:
                  type: string
                  example: >-
                    [{NAME:'vmcontacts.contactentrydate', OPERATOR:'On',
                    VALUE:'2020-07-28', VALUE2:'2020-07-28'}]
                offsetRows:
                  type: string
                  example: '100'
                reportID:
                  type: string
                  example: '38187'
      responses:
        '200':
          description: ''
  /report/list:
    get:
      tags:
        - Report
      summary: Retrieve a list of reports
      description: >-
        The `GET` request to `/report/list` endpoint retrieves a list of
        reports.
      operationId: retrieveAListOfReports
      responses:
        '200':
          description: ''
  /report/saved/list:
    get:
      tags:
        - Report
      summary: Retrieve a list of saved reports
      description: This endpoint retrieves a list of saved reports.
      operationId: retrieveAListOfSavedReports
      responses:
        '200':
          description: ''
  /report/saved:
    get:
      tags:
        - Report
      summary: Retrieve details for a saved report
      description: >-
        Returns details on the view fields and filters set for a given saved
        report. Note that this does **not** run the report. It returns the
        definition of the report. To run it, use **api/report/saved/run**
      operationId: retrieveDetailsForASavedReport
      parameters:
        - name: reportId
          in: query
          schema:
            type: string
            example: '38187'
          description: The reportID of the saved report.
      responses:
        '200':
          description: ''
  /report/fields:
    get:
      tags:
        - Report
      summary: Retrieve a list of report fields
      description: >-
        Returns details on the view fields and filters available for a given
        report. The names and operators can be using when running the report
        (api/report/run).
      operationId: retrieveAListOfReportFields
      parameters:
        - name: reportReference
          in: query
          schema:
            type: string
            example: contactsExtended
          description: >-
            The reference for the desired report. This can be found by either
            querying the api/report/list API, or as the ref parameter in the URL
            when running the report in aXcelerate. For example, for the Contact
            Details report is the value is: contactsSimple
      responses:
        '200':
          description: ''
  /report/field:
    get:
      tags:
        - Report
      summary: Retrieve details for a field
      description: >-
        More detailed information for a given report field. This will include
        the list of possible operators and values for fields, if applicable.
        Note that fields are general and can be used by more than one report,
        however, not all fields that are filters are available as filters for
        all reports. Check **api/report/fields** for the filters and fields
        available for a given report.
      operationId: retrieveDetailsForAField
      parameters:
        - name: fieldReference
          in: query
          schema:
            type: string
            example: vmcontacts.contactentrydate
          description: >-
            The reference for the desired field. This can be found by querying
            api/report/fields and is the NAME parameter.
      responses:
        '200':
          description: ''
  /resource/{documentId}:
    get:
      tags:
        - Resource
      summary: Retrieve a document
      description: >-
        Interacts with a specfic Resource Library Document. You can download a
        document with this endpoint.
      operationId: retrieveADocument
      parameters:
        - name: documentId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the Document.
      responses:
        '200':
          description: ''
  /trainer:
    post:
      tags:
        - Trainer
      summary: Create a new trainer
      description: Create a new Trainer
      operationId: createANewTrainer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactID:
                  description: The ID of the Contact.
                  type: integer
                  example: 13955224
                contactHrs:
                  description: The Trainer's Contact Hours.
                  type: integer
                  example: 23
                contactHrsTimeFrame:
                  description: The Trainer's Contact Hours - Time Frame.
                  type: string
                  example: WK
                empType:
                  description: |
                    Employment type of the trainer (e.g., FT for full-time, PT for Part Time
                    CAS for Casual, VOL for Volunteer, CONT for Contractor).
                  example: "FT"
                  enum:
                    - FT
                    - PT
                    - VOL
                    - CONT
                    - CAS
                experience:
                  description: The Trainer's Experience.
                  type: string
                  example: 'A brief description of experience'
                fillInOnly:
                  description: Is this Trainer a 'fill-in' (i.e. emergency only)?.
                  type: boolean
                  default: false
                  example: false
                rateAmount:
                  description: The Trainer's Rate.
                  type: number
                  example: 11.65
              required:
                - contactID
      responses:
        '200':
          description: 'A trainer object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainer'
  /trainer/{contactId}:
    get:
      tags:
        - Trainer
      summary: Retrieve an existing trainer
      description: This endpoint retrieves the details of a specific trainer.
      operationId: retrieveAnExistingTrainer
      parameters:
        - name: contactId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The Contact ID of the Trainer.
      responses:
        '200':
          description: 'A Trainer object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainer'
  /trainer/availability:
    post:
      tags:
        - Trainer
      summary: Check a trainer's availability
      description: >-
        This endpoint allows you to check the availability of a trainer for a
        specific date and time range.

        The response will be an array of clashes (if any) with the specified time range.
      operationId: checkATrainerSAvailability
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  description: The Contact ID of the Trainer
                  type: integer
                  example: 13955380
                date:
                  description: The date to check
                  type: string
                  example: '2024-08-12'
                startTime:
                  description: The start time of the range to check
                  type: string
                  example: 2024-08-12 04:58
                finishTime:
                  description: The end time of the range to check
                  type: string
                  example: 2024-08-12 19:58
      responses:
        '200':
          description: 'An array of clashes with the specified time range for the trainer.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clash'
  /user:
    post:
      tags:
        - User
      summary: Create a new user
      description: "Create a new user in the system."
      operationId: createANewUser
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactId:
                  description: The aXcelerate contactId the user is associated with.
                  type: integer
                  example: 13955224
                roleID:
                  description: >-
                    The Role to assign the User to. If this is omitted;
                    aXcelerate will try to set them to Learner if the Default
                    Role has been configured (In Additional Options).
                  type: integer
                  example: 1
                domainID:
                  description: The domainId. Set the Domain for the User.
                  type: integer
                  example: 2704
                sendEmail:
                  description: >-
                    Send the user creation invitation email. In most cases, this should be set to true,
                    except possibly when user access is managed by Corporate Identity Providers.
                  type: boolean
                  example: true
              required:
                - contactId
      responses:
        '200':
          description: 'A basic summary of the newly created User.'
          content:
            application/json:
              schema:
                properties:
                  USERID:
                    type: integer
                    description: "The unique identifier for the User."
                    example: 2962448
                  CONTACTID:
                    type: integer
                    description: "The unique identifier for the Contact."
                    example: 13971189
                  USERNAME:
                    type: string
                    description: "The username of the user."
                    example: "jim.jeffreys"
  /user/login:
    post:
      tags:
        - User
      summary: Generate user aXtoken (Login)
      description: "A user must be sent to one of the following urls, depending on environment.\n\n- [https://app.axcelerate.com/auth/user/login.cfm](https://app.axcelerate.com/auth/user/login.cfm)\n    \n- [https://stg.axcelerate.com/auth/user/login.cfm](https://stg.axcelerate.com/auth/user/login.cfm)\n    \n\nA\_`return_to`\_url parameter can be used to specify where you want the user to return to once they have successfully logged in.\n\n- [https://app.axcelerate.com/auth/user/login.cfm?return_to=https://yoursite.com/login](https://app.axcelerate.com/auth/user/login.cfm?return_to=https://yoursite.com/login)\n    \n\nFor security reasons, you will be required to register your ‘return_to’ URL with aXcelerate in the Approved Applications Register in aXcelerate under System Settings > Web & Other Integrations.\n\nWhen the user logs in and returns from the login page, they will return with a 'access_code' Url Parameter.\n\n- [https://yoursite.com/login?access_code=E2E8C0F5-BA18-4A80-B2C31862BB850232](https://yoursite.com/login?access_code=E2E8C0F5-BA18-4A80-B2C31862BB850232)\n    \n\nThis access code is then used with the user/login endpoint in order to generate an AXTOKEN for use with the API."
      operationId: generateUserAxtokenLogin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                accessCode:
                  type: string
                  example: 98C6EE14-2761-4E49-AA4392DF17F946BE
                userId:
                  type: string
                  example: '2187515'
      responses:
        '200':
          description: ''
  /user/logout:
    post:
      tags:
        - User
      summary: Logout current user
      description: This endpoint is used to log out the current user.
      operationId: logoutCurrentUser
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                return_to:
                  type: string
                  example: https://www.example.com
      responses:
        '200':
          description: ''
  /users:
    post:
      tags:
        - User
      summary: Search users
      description: "Search for users by specfic criteria."
      operationId: searchUsers
      parameters:
        - name: contactId
          in: query
          schema:
            type: string
            example: '6341338'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contactID:
                  description: The aXcelerate ContactId
                  type: integer
                  example: 13955224
                email:
                  description: The Associated Contact's email address
                  type: string
                  example: 'jim.jeffreys@axcelerate.com'
                givenName:
                  description: The Associated Contact's Given Name
                  type: string
                  example: 'Jim'
                surname:
                  description: The Associated Contact's Surname
                  type: string
                  example: 'Jeffreys'
                username:
                  description: The Username
                  type: string
                  example: 'jim.jeffreys'
                isActive:
                  description: The User status. Enter 0 = inactive, 1 = active, 2 = all
                  type: integer
                  example: 1
      responses:
        '200':
          description: 'An array of User objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{userId}:
    get:
      tags:
        - User
      summary: Retrieve a user
      description: The endpoint retrieves user information based on the provided user ID.
      operationId: retrieveAUser
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the User.
      responses:
        '200':
          description: 'A User object.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - User
      summary: Update an existing user
      description: >-
        This endpoint allows updating user information with the specified user
        ID.
      operationId: updateAnExistingUser
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: integer
            example: 1120758
          description: The ID of the User.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                active:
                  description: The User's Active status.
                  type: boolean
                  example: 1
                domainID:
                  description: The Domain associated with the User.
                  type: integer
                  example: 2704
                roleID:
                  description: The User Role associated with the User.
                  type: integer
                  example: 7786
      responses:
        '200':
          description: 'A simple response with the outcome of the request.'
          content:
            application/json:
              schema:
                properties:
                  STATUS:
                    type: string
                    description: "Outcome of the request."
                    example: "success"
                  MESSAGE:
                    type: string
                    description: "Message returned from the request."
                    example: "User updated successfully."
  /user/roles:
    get:
      tags:
        - User
      summary: Retrieve user roles
      description: This endpoint retrieves the roles within your account.
      operationId: retrieveUserRoles
      responses:
        '200':
          description: A list of user roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'
tags:
  - name: Agent
  - name: Accounting Items List
  - name: Accounting Invoice
  - name: Accounting Checkout
  - name: Accounting Payment
  - name: Categories
  - name: Certificate
  - name: Contact
  - name: Contact Message
  - name: Contact Note
  - name: Contact Portfolio
  - name: Course
  - name: Course Instance
  - name: Course Instance Attendance
  - name: Course Instance Extra Trainer
  - name: Course Instance Session
  - name: Custom Field
  - name: Delivery Location
  - name: Discount
  - name: Domain
  - name: Enrolment
  - name: Organisation
  - name: Organisation Detail
  - name: Report
  - name: Resource
  - name: Trainer
  - name: User
components:
  securitySchemes:
    AxToken:
      type: apiKey
      in: header
      name: apitoken
    WsToken:
      type: apiKey
      in: header
      name: wstoken
  schemas:
    Agent:
      type: object
      properties:
        MARKETINGAGENTID:
          type: integer
          description: Unique identifier for the Marketing Agent.
          example: 22548
        CONTACTID:
          type: integer
          description: Unique identifier for the Contact associated with the Agent.
          example: 13970849
        DEFAULTCOMMISSIONRATE:
          type: number
          description: The default commission rate assigned to the Agent.
          example: 11
        ACTIVE:
          type: boolean
          description: Indicates whether the Agent is active.
          example: true
        CUSTOMFIELD_REGION:
          type: string
          nullable: true
          description: Custom field for the Agent's region.
          example: null
        CUSTOMFIELD_WBSITE:
          type: string
          nullable: true
          description: Custom field for the Agent's website.
          example: null
        CUSTOMFIELD_BDM:
          type: string
          nullable: true
          description: Custom field for the Business Development Manager (BDM).
          example: null
    Clash:
      type: object
      properties:
        clashID:
          type: integer
          description: "Unique identifier for the clash."
          example: 14005554
        startTime:
          type: string
          description: "Scheduled start time of the clash."
          example: "8:30 AM"
        endTime:
          type: string
          description: "Scheduled end time of the clash."
          example: "12:30 PM"
        startTimeOverride:
          type: string
          description: "Override for the start time of the clash."
          example: "8:30 AM"
        endTimeOverride:
          type: string
          description: "Override for the end time of the clash."
          example: "12:30 PM"
        source:
          type: string
          description: "The source that caused the clash."
          example: "Complex"
        linkID:
          type: integer
          description: "Identifier of the source of the clash."
          example: 13970845
        editID:
          type: integer
          description: "Identifier for where the clash was detected."
          example: 1944624
        clashDate:
          type: string
          description: "The date of the clash."
          example: "November, 22 2024 00:00:00 +1000"
        clashOf:
          type: string
          description: "Type of entity involved in the clash (e.g., Trainer, Room)."
          example: "Trainer"
        name:
          type: string
          description: "Name of the entity involved in the clash."
          example: "Anthony Davis"
        Reason:
          type: string
          description: "Reason or description for the clash."
          example: "Initial Spill Response Training"
        tzNameIANA:
          type: string
          description: "IANA time zone name for the location of the clash."
          example: "Australia/Sydney"
        tzOffset:
          type: integer
          description: "Time zone offset in minutes from UTC."
          example: 660
    Contact:
      type: object
      properties:
        title:
          description: |
            Title/salutation
          type: string
          example: Mr
        givenName:
          description: Given (first) name. Maximum 40 characters.
          type: string
          example: Thomas
        middleName:
          description: Middle name(s). Maximum 40 characters.
          type: string
          example: ''
        surname:
          description: Surname (last name). Maximum 40 characters.
          type: string
          example: Mcgregor
        preferredName:
          description: Preferred name. Maximum 40 characters.
          type: string
          example: 'Tommy'
        emailAddress:
          description: Email address. Must be a valid email address.
          type: string
          example: thomas.mcgregor@prabbit.com
        emailAddressAlternative:
          description: AVETMISS 8.0 Alternate email address.
          type: string
          example: ''
        dob:
          description: >
            Date of Birth in the format YYYY-MM-DD. This cannot be dated
            in the future.
          type: string
          example: '1977-03-18'
        sex:
          description: Gender or sex of the contact. Valid values are M, F or X (for Other).
          type: string
          enum:
            - M
            - F
            - X
        phone:
          description: Home phone number.
          type: string
          example: ''
        mobilephone:
          description: Mobile phone number.
          type: string
          example: ''
        workphone:
          description: Work phone number.
          type: string
          example: ''
        fax:
          description: Fax number.
          type: string
          example: ''
        optionalId:
          description: An optional identifier to use for this Contact record.
          type: string
          example: ''
        contactActive:
          description: Activate or Deactivate the Contact
          type: string
          example: ''
        orgId:
          description: Organisation ID for the Contact
          type: integer
          example: 12345
        organisation:
          description: Organisation name.
          type: string
          example: 'McGreggors Farm'
        position:
          description: Position within the organisation.
          type: string
          example: 'Web Wizard'
        section:
          description: Section within the organisation.
          type: string
          nullable: true
        division:
          description: Division within the organisation.
          type: string
          nullable: true
        sourceCodeId:
          description: Identifier for the source code.
          type: number
          example: 1234
        historicClientId:
          description: >
            The Historical ID used with the student record. IMPORTANT
            IF: you have reported a person previously with a different
            SMS.
          type: string
          example: ''
        USI:
          description: >
            Unique Student Identifier (USI). A 10-digit code. If passed,
            this code must conform to the minimum validation: It must be
            10 digits in length and consist of only capital letters and
            numbers, excluding I, 1, 0 and O.
          type: string
          example: 'FAKE054321'
        LUI:
          description: >
            The Queensland Studies Authority Learner Unique Identifier
            (LUI). A 10-digit, numeric code.
          type: string
          example: '1234567890'
        TFN:
          description: >
            The student's Tax File Number, used for VET Student Loans
            reporting. The number must pass the ATO's check algorithm.
          type: string
          example: '1234588611'
        VSN:
          description: >
            The Victorian Student Number The VSN is a student
            identification number that is assigned by the Department of
            Education and Early Childhood Development.
          type: string
          example: ''
        workReadyParticipantNumber:
          description: Identifier for Work Ready Participants.
          type: string
          example: ''
        SACEStudentId:
          description: >
            South Australian Certificate of Education student
            identifier. It should consist of six numbers and one alpha
            letter, for e.g., 123456A.
          type: string
          example: ''
        emergencyContact:
          description: Name of an emergency contact.
          type: string
          example: 'Jane Bloggs'
        emergencyContactRelation:
          description: The relationship of the emergency contact (e.g., sister).
          type: string
          example: 'Mother'
        emergencyContactPhone:
          description: The phone number of the emergency contact.
          type: string
          example: '0432 222 222'
        buildingName:
          description: >
            AVETMISS 7.0 fields - will take these fields over address1
            and address2 if passed.
          type: string
          nullable: true
        unitNo:
          description: Unit number for the address.
          type: string
          nullable: true
        streetNo:
          description: Street number for the address.
          type: string
          example: '123'
        streetName:
          description: Street name for the address.
          type: string
          example: 'Fake Avenue'
        PoBox:
          description: PO Box number for postal address.
          type: string
          nullable: true
        address1:
          description: >
            First line of POSTAL address - address fields will be used
            only if AVETMISS 7.0 fields are not passed.
          type: string
          example: '123 Fake Avenue'
        address2:
          description: Second line of postal address.
          type: string
          nullable: true
        city:
          description: Postal suburb, locality or town.
          type: string
          example: 'Brisbane'
        state:
          description: |
            Postal state or territory.
            OTH means Other Australian Territory.
            OVS means Overseas.
          type: string
          enum:
            - ACT
            - NSW
            - NT
            - QLD
            - SA
            - TAS
            - VIC
            - WA
            - OTH
            - OVS
        postcode:
          description: Postal postcode.
          type: string
          example: '4064'
        countryId:
          description: >
            Postal Country - a 4-digit SACC code. This is only used if
            the full AVETMISS 7.0 address details are passed.
          type: number
          example: 1101
        country:
          description: Postal Country.
          type: string
          example: 'Australia'
        sBuildingName:
          description: >
            AVETMISS 7.0 fields for residential address building name.
          type: string
          nullable: true
        sUnitNo:
          description: Unit number for the street address.
          type: string
          nullable: true
        sStreetNo:
          description: Street number for the residential address.
          type: string
          nullable: true
        sStreetName:
          description: Street name for the residential address.
          type: string
          nullable: true
        sPoBox:
          description: PO Box number for the residential address.
          type: string
          example: 'PO Box 1235'
        sAddress1:
          description: First line of residential address.
          type: string
          example: 'PO Box 1235'
        sAddress2:
          description: Second line of residential address.
          type: string
          nullable: true
        sCity:
          description: Residential city or suburb.
          type: string
          example: 'Brisbane'
        sState:
          description: |
            Residential state or territory.
            OTH means Other Australian Territory.
            OVS means Overseas.
          type: string
          enum:
            - ACT
            - NSW
            - NT
            - QLD
            - SA
            - TAS
            - VIC
            - WA
            - OTH
            - OVS
        sPostcode:
          description: Residential postcode.
          type: string
          example: '4000'
        sCountryId:
          description: Residential country (4-digit SACC code).
          type: number
          example: 1101
        sCountry:
          description: Residential country name.
          type: string
          example: 'Australia'
        termAddress1:
          description: First line of term address.
          type: string
          example: '21 Something Parade'
        termAddress2:
          description: Second line of term address.
          type: string
          nullable: true
        termCity:
          description: City for term address.
          type: string
          example: 'Brisbane'
        termState:
          description: |
            State or territory for term address.
            OTH means Other Australian Territory.
            OVS means Overseas.
          type: string
          enum:
            - ACT
            - NSW
            - NT
            - QLD
            - SA
            - TAS
            - VIC
            - WA
            - OTH
            - OVS
        termPostcode:
          description: Postcode for term address.
          type: string
          example: '4000'
        termCountryId:
          description: Country ID for term address (4-digit SACC code).
          type: number
          example: 1101
        termCountry:
          description: Country for term address.
          type: string
          example: 'Australia'
        countryOfBirthId:
          description: Country of Birth as a valid 4-digit SACC code.
          type: number
          example: 1101
        cityOfBirth:
          description: City of Birth. Used if later creating a USI for this contact.
          type: string
          example: 'Soutport'
        countryofCitizenId:
          description: Country of citizenship as a valid 4-digit SACC code.
          type: number
          example: 1101
        citizenStatusId:
          description: Citizenship status ID.
          type: number
          example: 1
        residencyStatusId:
          description: Residency status ID.
          type: number
          example: 1
        labourForceId:
          description: Labour force status identifier.
          type: number
          example: 1
        mainLanguageId:
          description: Main language spoken at home ID.
          type: number
          example: 1
        englishProficiencyId:
          description: English proficiency level ID.
          type: integer
          example: 1
        englishAssistanceFlag:
          description: Flag to indicate whether English assistance is required.
          type: boolean
          example: false
        highestSchoolLevelId:
          description: Highest school level completed identifier. For valid values see the AVETMISS documentation.
          type: number
          example: 02
        highestSchoolLevelYear:
          description: Year the highest school level was completed.
          type: integer
          example: 11
        atSchoolFlag:
          description: Flag indicating if currently at school.
          type: boolean
          example: false
        atSchoolName:
          description: The name of the contact's current secondary school.
          type: string
          example: 'ACME High School'
        priorEducationStatus:
          description: >-
            A true/false AVETMISS flag to indicate whether a contact has
            successfully completed some post-secondary education. A true
            value here will be ignored without also passing
            PriorEducationIDs.
          type: boolean
          example: true
        priorEducationIds:
          description: >-
            A comma delimited list of AVETMISS prior educational
            achievement identifiers to indicate prior higher education.
            For valid values see the AVETMISS documentation. The
            Victorian AVETMISS field Prior Educational Achievement
            Recognition Identifier may be appended (e.g. 420A). Also
            accepts @ if not specified.
          type: string
          example: ''
        disabilityFlag:
          description: >-
            A true/false AVETMISS flag to indicate whether the contact
            considers themselves to have a disability, impairment or
            long-term condition.
          type: boolean
          example: false
        disabilityTypeIds:
          description: >-
            A comma delimited list of AVETMISS disability type
            identifiers. For valid values see the AVETMISS
            documentation.
          type: string
          example: ''
        indigenousStatusId:
          description: >-
            AVETMISS indigenous status identifier to indicate a contact
            who self-identifies as being of Australian Aboriginal or
            Torres Strait Islander descent. For valid values see the
            AVETMISS documentation.
          type: integer
          example: ''
        ANZSCOCode:
          description: >-
            Australian and New Zealand Standard Classification of
            Occupations (ANZSCO), ABS catalogue no.1220.0, 2009. The
            major group of this code is used for the Victorian AVETMISS
            field Client Occupation Identifier (left most digit).
          type: string
          example: ''
        ANZSICCode:
          description: >-
            Australian and New Zealand Standard Industrial
            Classification (ANZSIC), ABS catalogue no.1292.0, 2006. The
            division of this code is used for the Victorian AVETMISS
            field Client Industry of Employment (see ABS catalogue).
          type: string
          example: ''
        surveyContactStatusCode:
          description: >-
            Code indicating whether this contact can be contacted for
            government surveys. Use aXcelerate Support to manage
            these values.
          type: string
          example: ''
        employerContactId:
          description: The ContactID of the Contact Record who is the Employer of this Contact.
          type: integer
          example: 123456
        payerContactId:
          description: The ContactID of the Contact Record who is the Payer of this Contact.
          type: integer
          example: 123456
        supervisorContactId:
          description: The ContactID of the Contact Record who is the Supervisor of this Contact.
          type: integer
          example: 123456
        agentContactId:
          description: The ContactID of the Contact Record who is the Agent for this Contact.
          type: integer
          example: 123456
        coachContactId:
          description: The ContactID of the Contact Record who is the Coach for this Contact.
          type: integer
          example: 123456
        internationalContactId:
          description: The ContactID of the Contact Record who is the International Contact for this Contact (CRICOS).
          type: integer
          example: 123456
        parentContactID:
          description: The ContactID of the Contact Record who is the Parent/Guardian for this Contact.
          type: integer
          example: 123456
        categoryIds:
          description: A list of valid category IDs. (adds to Contact ONLY)
          type: array
          example: [267,4528,26417]
        domainIds:
          description: >-
            A list of domainIDs to set against the contact. This will
            overwrite any existing domains against the contact. Requires
            the Contact Domains feature to be enabled in the account.
          type: array
          example: [472, 473]
      required:
        - givenName
        - surname
    ContactCategory:
      type: object
      properties:
        CATEGORYID:
          type: integer
          description: The unique identifier for the contact category.
          example: 22548
        CATEGORYCODE:
          type: string
          description: A code representing the category.
          example: "STU"
        CATEGORYDESCRIPTOR:
          type: string
          description: A description of the category.
          example: "Student"
        CATENTRYDATE:
          type: string
          description: The date and time when the category was created or entered.
          example: "August, 22 2017 03:09:06 +1000"
        ACTIVE:
          type: integer
          enum: [0, 1]
    ContactMessage:
      type: object
      properties:
        message:
          type: string
          description: The message to be displayed.
          example: "This student has attendance issues. Consider before enrolling."
        showAlert:
          type: boolean
          example: true
          description: "Indicates whether a modal alert should be shown when viewing the Contact's profile."
      required:
        - message
        - showAlert
    ContactNote:
      type: object
      properties:
        ID:
          type: integer
          description: Unique identifier for the contact note.
          example: 117773094
        TEXT:
          type: string
          description: The content of the contact note.
          example: "Called and enquired about deferring Course XYZ"
        TYPE:
          type: string
          description: The type or category of the note.
          example: "Client Satisfaction Call"
        DATEINSERTED:
          type: string
          description: The date and time the note was created.
          example: "2024-11-27 11:00"
        DATEUPDATED:
          type: string
          nullable: true
          description: The date and time the note was last updated.
          example: "2024-11-27 11:02"
        ADDEDBY:
          type: string
          description: The name of the person who added the note.
          example: "Jim Jeffreys"
        UPDATEDBY:
          type: string
          nullable: true
          description: The name of the person who last updated the note.
          example: "Jeff Bezos"
        ADDEDBYCONTACTID:
          type: integer
          description: Contact ID of the person who added the note.
          example: 6341338
        UPDATEDBYCONTACTID:
          type: integer
          nullable: true
          description: Contact ID of the person who last updated the note.
          example: 6341338
        ATTACHMENTS:
          type: string
          nullable: true
          description: File attachments related to the note (comma separated).
          example: "document.pdf"
    ContactNoteType:
      type: object
      properties:
        NOTETYPEID:
          type: integer
          description: "Unique identifier for the contact note type."
          example: 1588
        DESCRIPTOR:
          type: string
          description: "Description of the contact note type."
          example: "Account Management Follow Up"
        ENTRYDATE:
          type: string
          description: "The date and time when the contact note type was created."
          example: "2011-10-11 10:36"
        ACTIVE:
          type: boolean
          description: "Indicates if the contact note type is currently active."
          example: true
        COLOUR:
          type: string
          nullable: true
          description: "Deprecated/Not Implemented."
          deprecated: true
          example: null
    ContactSource:
      type: object
      properties:
        SOURCECODEID:
          type: integer
          description: The unique identifier for the source code.
        SOURCE:
          type: string
          description: The name or description of the source.
        ISACTIVE:
          type: boolean
          description: Indicates whether the source is active.
        ISPUBLIC:
          type: boolean
          description: Indicates whether the source is public.
    Course:
      type: object
      properties:
        ID:
          type: integer
          example: 105650
        NAME:
          type: string
          example: 'Certificate II in Irrigation'
        STREAMNAME:
          type: string
          nullable: true
          example: 'Level 3'
        DIPLOMAVERSION:
          type: string
          nullable: true
          example: null
        CODE:
          type: string
          example: "AHC21116"
        GST_TYPE:
          type: integer
          enum: [0, 1, 2]
          description: "0 = no GST, 1 = GST Included, 2 = GST Excluded"
        COST:
          type: number
          example: 0
        DELIVERY:
          type: string
          nullable: true
          example: "Face-to-Face"
        DURATION:
          type: integer
          nullable: true
          example: 0
        DURATIONTYPE:
          type: string
          enum: ['hour', 'half-day', 'day', 'session', 'week', 'month']
          nullable: true
          example: "months"
        ISACTIVE:
          type: boolean
          example: true
        TYPE:
          type: string
          enum: ['w', 'p', 'el']
          example: "w"
        SHORTDESCRIPTION:
          type: string
          nullable: true
          example: null
        PRIMARYIMAGE:
          type: string
          nullable: true
          example: '//fs.stg.axcelerate.com/images/71456451/ThisIsAnImage.jpg'
        SECONDARYIMAGE:
          type: string
          nullable: true
          example: null
        LASTUPDATEDUTC:
          type: string
          example: "2024-07-11 05:19"
    CourseDetailElearning:
      type: object
      properties:
        ID:
          type: integer
          description: Unique identifier for the ELearning
        TYPE:
          type: string
          example: 'el'
          description: For a ELearning, type will be 'el'
        NAME:
          type: string
          description: Name of the ELearning
        CODE:
          type: string
          description: This will be null
          nullable: true
        DESCRIPTION:
          type: string
          description: Detailed description of the ELearning, may contain HTML formatting
        COST:
          type: number
          description: Cost of the ELearning
        DURATION:
          type: string
          description: Duration of the Elearning. This will be a concatenated string of the duration and the unit of time (e.g., '2 hours')
          nullable: true
        OUTLINE:
          type: string
          description: Course outline in HTML format
        LASTUPDATEUTC:
          type: string
          description: Last update timestamp in UTC
          nullable: true
    CourseDetailQualification:
      type: object
      properties:
        ID:
          type: integer
          description: Unique identifier for the Qualification
        TYPE:
          type: string
          example: 'p'
          description: For a Qualification, type will be 'p'
        NAME:
          type: string
          description: Name of the Qualification
        CODE:
          type: string
          description: Qualification code
        DESCRIPTION:
          type: string
          description: Detailed description of the Qualification, may contain HTML formatting
        COST:
          type: number
          description: Cost of the Qualification
        GST_TYPE:
          type: integer
          enum: [0, 1, 2]
          description: "0 = no GST, 1 = GST Included, 2 = GST Excluded"
        DURATION:
          type: string
          description: A Qualification does not include a Duration and this field will be null
          nullable: true
        OUTLINE:
          type: string
          description: Course outline in HTML format
        LASTUPDATEUTC:
          type: string
          description: Last update timestamp in UTC
        STREAMNAME:
          type: string
          description: Name of the course stream
          nullable: true
        STREAMPUBLIC:
          type: boolean
          description: Indicates if the course stream is publicly available
        LEARNERPORTALIMAGE:
          type: string
          format: uri
          description: URL of the learner portal image
        ASSOCIATEDCOURSEIDENTIFIER:
          type: string
          description: Identifier as part of VET Data Requirements
    CourseDetailWorkshop:
      type: object
      properties:
        ID:
          type: integer
          description: Unique identifier for the Workshop Type
        TYPE:
          type: string
          example: 'w'
          description: For a Workshop Type, type will be 'w'
        NAME:
          type: string
          description: Name of the Workshop Type
        CODE:
          type: string
          description: Workshop Type code
        DESCRIPTION:
          type: string
          description: Detailed description of the Workshop Type, may contain HTML formatting
        COST:
          type: number
          description: Cost of the Workshop Type
        GST_TYPE:
          type: integer
          enum: [0, 1, 2]
          description: "0 = no GST, 1 = GST Included, 2 = GST Excluded"
        DURATION:
          type: string
          description: Duration of the Workshop Type. This will be a concatenated string of the duration and the unit of time (e.g., '2 days')
        OUTLINE:
          type: string
          description: Course outline in HTML format
        OUTLINEELEMENTS:
          type: array
          items:
            $ref: "#/components/schemas/CourseDetailWorkshopOutlineElement"
          description: List of outline elements
        LASTUPDATEUTC:
          type: string
          description: Last update timestamp in UTC
    CourseDetailWorkshopOutlineElement:
      type: object
      properties:
        CONTENT:
          type: array
          items:
            type: string
          description: List of topics covered in the course
        SHORTDESCRIPTION:
          type: string
          description: Brief summary of the course
        INTRODUCTION:
          type: string
          description: Introduction to the course, may contain HTML formatting
        IMAGES:
          type: array
          items:
            type: string
            format: uri
          description: List of image URLs related to the course
        TARGETAUDIENCE:
          type: string
          description: Description of the intended audience for the course, may contain HTML formatting
        ADDITIONALINFORMATION:
          type: string
          description: Any additional details about the course
        LEARNINGMETHODS:
          type: string
          description: Explanation of teaching and learning methods used
        LEARNINGOUTCOMES:
          type: array
          items:
            type: string
          description: List of learning objectives and outcomes for participants
        PROGRAMBENEFITS:
          type: array
          items:
            type: string
          description: Key benefits of completing the course
    Domain:
      type: object
      properties:
        DOMAINID:
          type: integer
          description: The unique identifier of the domain.
          example: 472
        DOMAINNAME:
          type: string
          description: The name of the domain.
          example: "VM Learning"
    Invoice:
      type: object
      properties:
        INVOICENR:
          type: string
          description: The invoice number.
          example: "AX2_10132"
        PRICEGROSS:
          type: number
          description: The gross price of the invoice.
          example: 200
        ADDRESS2:
          type: string
          nullable: true
          description: Additional address information.
          example: null
        OWNERCONTACTID:
          type: integer
          description: The contact ID of the owner.
          example: 10700277
        ORGANISATION:
          type: string
          description: Organisation name associated with the invoice.
          example: "1 EDUCATION PTY LTD"
        SHIPLASTNAME:
          type: string
          description: The last name for shipping.
          example: "Staines"
        SHIPHOUSENR:
          type: string
          nullable: true
          description: House number for shipping.
          example: null
        SHIPORGID:
          type: integer
          description: The organisation ID for shipping.
          example: 831908
        SHIPPOSTCODE:
          type: string
          nullable: true
          description: Postal code for shipping.
          example: null
        COMMENT:
          type: string
          nullable: true
          description: Comments related to the invoice.
          example: null
        PHONENR:
          type: string
          description: The phone number associated with the invoice.
          example: "07 3215 8888"
        ORGID:
          type: integer
          description: The organisation ID.
          example: 831908
        PAYMENTS:
          type: array
          description: Payments made towards the invoice.
          items:
            type: object
        SHIPCOUNTRY:
          type: string
          nullable: true
          description: Shipping country.
          example: null
        DUEDATE:
          type: string
          format: date
          description: The due date of the invoice.
          example: "2024-10-30"
        SHIPORGANISATION:
          type: string
          description: The shipping organisation name.
          example: "1 EDUCATION PTY LTD"
        INVOICEID:
          type: integer
          description: Unique identifier for the invoice.
          example: 2522186
        DUEDATEOFFSET:
          type: integer
          description: Offset for the due date.
          example: 10
        AREITEMSLOCKED:
          type: boolean
          description: Indicates if the items are locked.
          example: false
        LASTNAME:
          type: string
          description: The last name of the contact.
          example: "Staines"
        STREET:
          type: string
          nullable: true
          description: Street address for the invoice.
          example: null
        ITEMS:
          type: array
          description: Items included in the invoice.
          items:
            $ref: '#/components/schemas/InvoiceItem'
        INVOICEDATE:
          type: string
          format: date
          description: The date the invoice was issued.
          example: "2024-10-20"
        CURRENCY:
          type: string
          description: Currency for the invoice.
          example: "AUD"
        SHIPPRICENETT:
          type: number
          description: Shipping price excluding tax.
          example: 0
        SHIPSTATE:
          type: string
          nullable: true
          description: Shipping state.
          example: null
        CONTACTNAME:
          type: string
          description: The name of the contact person.
          example: "Rod Staines"
        SHIPCOUNTRYISO3166:
          type: string
          nullable: true
          description: Shipping country ISO 3166 code.
          example: null
        SHIPSTREET:
          type: string
          nullable: true
          description: Shipping street.
          example: null
        HOUSENR:
          type: string
          nullable: true
          description: House number associated with the invoice.
          example: null
        ISARCHIVED:
          type: boolean
          description: Indicates if the invoice is archived.
          example: false
        ORDERDATE:
          type: string
          format: date
          description: The date the order was placed.
          example: "2024-10-20"
        CONTACTID:
          type: integer
          description: Unique identifier for the contact.
          example: 10700277
        EXTERNALREFERENCE:
          type: string
          nullable: true
          description: External reference for the invoice.
          example: null
        SHIPCITY:
          type: string
          nullable: true
          description: Shipping city.
          example: null
        SHIPPRICEGROSS:
          type: number
          description: Shipping price including tax.
          example: 0
        COUNTRYISO3166:
          type: string
          nullable: true
          description: Country ISO 3166 code.
          example: null
        ISINVOICENRLOCKED:
          type: boolean
          description: Indicates if the invoice number is locked.
          example: true
        SHIPTAXPERCENT:
          type: number
          description: Shipping tax percentage.
          example: 0
        SHIPPRICETAX:
          type: number
          description: Shipping tax amount.
          example: 0
        STATE:
          type: string
          nullable: true
          description: State associated with the invoice.
          example: null
        FIRSTNAME:
          type: string
          description: First name of the contact person.
          example: "Rod"
        SHIPADDRESS2:
          type: string
          nullable: true
          description: Additional shipping address information.
          example: null
        SHIPFIRSTNAME:
          type: string
          description: First name for shipping.
          example: "Rod"
        CITY:
          type: string
          nullable: true
          description: City associated with the invoice.
          example: null
        ORDERNR:
          type: string
          nullable: true
          description: Order number.
          example: null
        EMAIL:
          type: string
          description: Email address for the contact person.
          example: "rod.staines@axcelerate.com"
        PRICENETT:
          type: number
          description: The total net price of the invoice.
          example: 181.82
        COUNTRY:
          type: string
          nullable: true
          description: Country associated with the invoice.
          example: null
        INVGUID:
          type: string
          description: Unique identifier for the invoice.
          example: "45C407BC-B41A-4DBB-9F58AFF49F8FFE6F"
        BALANCE:
          type: number
          description: Outstanding balance for the invoice.
          example: 200
        POSTCODE:
          type: string
          nullable: true
    InvoiceItem:
      type: object
      properties:
        TOTALTAX:
          type: number
          description: The total tax for the item.
          example: 18.18
        CHILDREN:
          type: object
          description: Children associated with the item.
        UNITPRICETAX:
          type: number
          description: Unit price tax for the item.
          example: 18.182
        DOMAINID:
          type: integer
          description: Domain ID associated with the item.
          example: 0
        HASCHILDREN:
          type: integer
          description: Indicates if the item has children.
          example: 0
        PARTID:
          type: integer
          description: Part ID associated with the item.
          example: 0
        UNITPRICENETT:
          type: number
          description: The unit price excluding tax.
          example: 181.818
        QTY:
          type: integer
          description: Quantity of the item.
          example: 1
        TAXPERCENT:
          type: number
          description: The tax percentage for the item.
          example: 10
        TOTALGROSS:
          type: number
          description: The total gross amount.
          example: 200
        ITEMCODE:
          type: string
          nullable: true
          description: Code for the item.
          example: null
        FINANCECODE:
          type: string
          nullable: true
          description: Finance code for the item.
          example: null
        TOTALNETT:
          type: number
          description: The total nett amount.
          example: 181.82
        SOURCEID:
          type: integer
          description: Source ID for the item.
          example: 0
        HASH:
          type: string
          description: Unique hash for the item.
          example: "4E30651D13E6B14A7C96C14E6C070A15"
        SERVICEDATE:
          type: string
          nullable: true
          description: Service date for the item.
          example: null
        UNITPRICEGROSS:
          type: number
          description: The unit price including tax.
          example: 200
        ITEMID:
          type: integer
          description: Unique ID for the item.
          example: 4467252
        DESCRIPTION:
          type: string
          description: Description of the item.
          example: "ewwewe"
        COSTCENTRECODE:
          type: string
          nullable: true
          description: Cost centre code.
          example: null
    InvoiceSummary:
      type: object
      properties:
        INVOICENR:
          type: string
          description: The invoice number.
          example: "AX-10132"
        PRICEGROSS:
          type: string
          description: The gross price of the invoice.
          example: "200"
        DUEDATE:
          type: string
          format: date
          description: The due date of the invoice.
          example: "2024-10-30"
        INVOICEID:
          type: string
          description: The unique identifier of the invoice.
          example: "2522186"
        AREITEMSLOCKED:
          type: boolean
          description: Indicates if the items in the invoice are locked.
          example: false
        LASTNAME:
          type: string
          description: The last name of the customer or client.
          example: "Staines"
        ISCANCELLED:
          type: boolean
          description: Indicates if the invoice has been cancelled.
          example: false
        EXTERNALREFERENCE:
          type: string
          nullable: true
          description: An external reference for the invoice.
          example: null
        BALANCE:
          type: string
          description: The outstanding balance of the invoice.
          example: "200"
        FIRSTNAME:
          type: string
          description: The first name of the customer or client.
          example: "Rod"
        INVOICEDATE:
          type: string
          format: date
          description: The date the invoice was issued.
          example: "2024-10-20"
        ISVOID:
          type: boolean
          description: Indicates if the invoice is void.
          example: false
        ISPAID:
          type: boolean
          description: Indicates if the invoice has been paid.
          example: false
    Organisation:
      type: object
      properties:
        HIERACHYDEPTH:
          type: integer
          description: Level of hierarchy for the organisation.
          example: 2
        HIERACHYPATH:
          type: string
          description: Path of hierarchy levels in the organisation structure.
          example: "/264487/264488/"
        NWDF_ORGSIZEBRACKET:
          type: string
          nullable: true
          description: Size bracket category for the organisation.
        BANNER:
          type: string
          description: HTML content for the organisation's banner.
          example: "<img src='/images/logo.png'>"
        ORGNAMEACCOUNTING:
          type: string
          nullable: true
          description: Organisation name for accounting purposes.
        PURCHASEORDERREQUIRED:
          type: integer
          description: Indicates if a purchase order is required (1 or 0).
          example: 0
        SCHOOLTYPEID:
          type: string
          description: Identifier for the type of school if applicable.
          example: "91"
        BOOKING_NOTES:
          type: string
          nullable: true
          description: Additional notes for bookings.
        LEGALNAME:
          type: string
          nullable: true
          description: Legal name of the organisation.
        FINANCESYSTEMCARDID:
          type: string
          nullable: true
          description: Identifier for financial system card.
        HIERACHYROOT:
          type: integer
          description: ID of the root organisation in the hierarchy.
          example: 264487
        PAYERCONTACTID:
          type: integer
          nullable: true
          description: Contact ID for the organisation's payer.
        NAME:
          type: string
          description: Organisation name.
          example: "DO Tha VooDoo2"
        ORGID:
          type: integer
          description: Unique identifier for the organisation.
          example: 264488
        PARENT:
          $ref: "#/components/schemas/OrganisationParent"
        ORGOPTIONALID:
          type: string
          description: Optional organisation identifier.
          example: "1234"
        EMPLOYERCONTACTID:
          type: integer
          nullable: true
          description: Contact ID for the employer associated with the organisation.
        ABN:
          type: string
          nullable: true
          description: Australian Business Number for the organisation.
        ANZSIC:
          type: string
          nullable: true
          description: ANZSIC code for the organisation's industry classification.
        PARENTORGID:
          type: integer
          nullable: true
          description: Parent organisation's ID.
          example: 264487
        ORGANISATIONNOTES:
          type: string
          description: Additional notes related to the organisation.
          example: "Testing 9876543210"
        KEYCONTACTS:
          type: array
          items:
            $ref: "#/components/schemas/OrganisationKeyContact"
          description: Key contacts associated with the organisation.
        DETAILS:
          type: array
          items:
            $ref: "#/components/schemas/OrganisationDetail"
          description: Additional details for the organisation.
        CATEGORIES:
          type: array
          items:
            $ref: "#/components/schemas/OrganisationCategory"
        CUSTOMFIELD_MYFIRSTFIELD:
          type: string
          description: Custom field containing the first field's information.
          example: "This is my first field"
        CUSTOMFIELD_MYMULTISELECT:
          type: array
          items:
            type: string
          description: Multiselect custom field for the organisation.
          example: ["A", "B"]
    OrganisationParent:
      type: object
      properties:
        HIERACHYDEPTH:
          type: integer
          description: Level of hierarchy for the parent organisation.
          example: 1
        HIERACHYPATH:
          type: string
          description: Path of hierarchy levels for the parent organisation.
          example: "/264487/"
        NWDF_ORGSIZEBRACKET:
          type: string
          nullable: true
          description: Size bracket category for the parent organisation.
        ORGNAMEACCOUNTING:
          type: string
          nullable: true
          description: Accounting name for the parent organisation.
        PURCHASEORDERREQUIRED:
          type: integer
          description: Indicates if a purchase order is required for the parent organisation (1 or 0).
          example: 0
        BOOKING_NOTES:
          type: string
          nullable: true
          description: Booking notes for the parent organisation.
        LEGALNAME:
          type: string
          nullable: true
          description: Legal name of the parent organisation.
        FINANCESYSTEMCARDID:
          type: string
          nullable: true
          description: Financial system card ID for the parent organisation.
        HIERACHYROOT:
          type: integer
          description: ID of the root organisation for the hierarchy.
          example: 264487
        PAYERCONTACTID:
          type: integer
          nullable: true
          description: Payer contact ID for the parent organisation.
        NAME:
          type: string
          description: Name of the parent organisation.
          example: "DO Tha VooDoo"
        ORGID:
          type: integer
          description: Unique identifier for the parent organisation.
          example: 264487
        EMPLOYERCONTACTID:
          type: integer
          nullable: true
          description: Employer contact ID for the parent organisation.
        ABN:
          type: string
          nullable: true
          description: Australian Business Number for the parent organisation.
        ANZSIC:
          type: string
          nullable: true
          description: ANZSIC code for industry classification of the parent organisation.
        PARENTORGID:
          type: integer
          nullable: true
          description: ID of the organisation's parent (if any).
        ORGANISATIONNOTES:
          type: string
          description: Notes specific to the parent organisation.
          example: "Testing 543210"
    OrganisationCategory:
      type: object
      properties:
        CATEGORYID:
          type: integer
          description: Unique identifier for the category.
          example: 1234
        CATEGORYCODE:
          type: string
          description: Code representing the organisation category.
          example: "org101"
        CATEGORYDESCRIPTOR:
          type: string
          description: Description of the organisation category.
          example: "Organisation Group A"
        ACTIVE:
          type: integer
          description: Status of the category (1 = active, 0 = inactive).
          example: 1
    OrganisationDetail:
      type: object
      properties:
        DETAILID:
          type: integer
          description: Unique identifier for the organisation detail entry.
          example: 58329
        ORGID:
          type: integer
          description: Unique identifier for the associated organisation.
          example: 29176
        TYPE:
          type: string
          description: Type of address or contact information.
          example: "Street Address"
        PHONE:
          type: string
          description: Phone number associated with this detail entry.
          example: "07 3870 3851"
        FAX:
          type: string
          description: Fax number associated with this detail entry.
          example: "07 3367 2529"
        EMAILADDRESS:
          type: string
          nullable: true
          description: Email address associated with this detail entry.
        WEBSITE:
          type: string
          nullable: true
          description: Website URL associated with this detail entry.
        ADDRESS1:
          type: string
          description: Primary address line for this detail entry.
          example: "PO Box 624"
        ADDRESS2:
          type: string
          nullable: true
          description: Secondary address line for this detail entry.
        CITY:
          type: string
          description: City for this detail entry.
          example: "TOOWONG"
        STATE:
          type: string
          description: State for this detail entry.
          example: "QLD"
        POSTCODE:
          type: string
          description: Postal code for this detail entry.
          example: "4066"
        COUNTRY:
          type: string
          description: Country for this detail entry.
          example: "AUSTRALIA"
    OrganisationKeyContact:
      type: object
      properties:
        CONTACTID:
          type: integer
          description: Unique identifier for the key contact.
          example: 7460933
        GIVENNAME:
          type: string
          description: First name of the key contact.
          example: "Rob"
        SURNAME:
          type: string
          description: Surname of the key contact.
          example: "Fairy"
        EMAIL:
          type: string
          description: Email address of the key contact.
          example: "rob.emails@emails.com"
        POSITION:
          type: string
          description: Position or role of the key contact within the organisation.
          example: "Director"
        MOBILEPHONE:
          type: string
          description: Mobile phone number of the key contact.
          example: "+61 400 000 000"
        PHOTO:
          type: integer
          description: Indicator of whether the contact has an associated photo (1 for yes, 0 for no).
          example: 1
        PHOTOURL:
          type: string
          description: URL link to the photo of the key contact.
          example: "https://fs.axcelerate.com.au/images/71456677/students/746012.png"
    OrganisationSummary:
      type: object
      properties:
        ROWID:
          type: integer
          description: Unique row identifier for the organisation record.
          example: 5
        ORGID:
          type: integer
          description: Unique identifier for the organisation.
          example: 107226
        NAME:
          type: string
          description: Name of the organisation.
          example: "Flowers by Mercedes Pty Ltd"
        LEGALNAME:
          type: string
          nullable: true
          description: Legal name of the organisation.
        ANZSIC:
          type: string
          nullable: true
          description: ANZSIC code representing the organisation's industry classification.
        ORGANISATIONNOTES:
          type: string
          nullable: true
          description: Additional notes about the organisation.
        HIERACHYROOT:
          type: integer
          description: The top-level root identifier in the organisational hierarchy.
          example: 107226
        HIERACHYPATH:
          type: string
          description: Hierarchical path indicating organisational structure.
          example: "/107226/"
        HIERACHYDEPTH:
          type: integer
          description: Depth level within the organisational hierarchy.
          example: 1
        BOOKING_NOTES:
          type: string
          nullable: true
          description: Notes related to bookings for the organisation.
        BOOKING_DISCOUNT:
          type: number
          format: float
          description: Discount percentage applied to bookings.
          example: 0
        FINANCESYSTEMCARDID:
          type: string
          nullable: true
          description: Finance system card identifier associated with the organisation.
        ORGNAMEACCOUNTING:
          type: string
          nullable: true
          description: Accounting name of the organisation.
        ABN:
          type: string
          nullable: true
          description: Australian Business Number (ABN) of the organisation.
        PURCHASEORDERREQUIRED:
          type: integer
          description: Indicator if a purchase order is required (1 for yes, 0 for no).
          example: 0
        NWDF_ORGSIZEBRACKET:
          type: string
          nullable: true
          description: Organisation size bracket based on NWDF classifications.
        ACTIVE:
          type: integer
          description: Indicator if the organisation is active (1 for active, 0 for inactive).
          example: 1
        COUNT:
          type: integer
          description: Number of related records or associated entries.
          example: 5
        DETAILS:
          type: array
          description: Collection of detail records associated with the organisation.
          items:
            $ref: '#/components/schemas/OrganisationDetail'
        PARENT:
          type: object
          description: Parent organisation details.
          $ref: '#/components/schemas/OrganisationParent'
        CATEGORIES:
          type: array
          description: List of categories assigned to the organisation.
          items:
            $ref: '#/components/schemas/OrganisationCategory'
        PARENTORGID:
          type: integer
          nullable: true
          description: Identifier of the parent organisation, if applicable.
        PAYERCONTACTID:
          type: integer
          nullable: true
          description: Identifier of the contact responsible for payments within the organisation.
        EMPLOYERCONTACTID:
          type: integer
          nullable: true
          description: Identifier of the employer contact associated with the organisation.
    OrganisationChildren:
      type: object
      properties:
        HIERACHYDEPTH:
          type: integer
          description: The depth level of the organisation within the hierarchy.
          example: 1
        NWDF_ORGSIZEBRACKET:
          type: string
          nullable: true
          description: The size bracket category for the organisation.
          example: null
        HIERACHYPATH:
          type: string
          description: Path indicating the organisation's position in the hierarchy.
          example: "/351300/"
        BOOKING_DISCOUNT:
          type: number
          description: Discount applicable for bookings.
          example: 0
        ORGNAMEACCOUNTING:
          type: string
          nullable: true
          description: The accounting name of the organisation.
          example: null
        PURCHASEORDERREQUIRED:
          type: integer
          description: Indicates if a purchase order is required (1 = required, 0 = not required).
          example: 0
        SCHOOLTYPEID:
          type: string
          description: Type ID associated with the school.
          example: "91"
        BOOKING_NOTES:
          type: string
          nullable: true
          description: Additional notes related to bookings.
          example: null
        LEGALNAME:
          type: string
          description: The legal name of the organisation.
          example: "Nathan Robert Gordon Digital Solutions"
        FINANCESYSTEMCARDID:
          type: string
          nullable: true
          description: Finance system card identifier.
          example: null
        HIERACHYROOT:
          type: integer
          description: ID of the root organisation in the hierarchy.
          example: 351300
        NAME:
          type: string
          description: Name of the organisation.
          example: "NRG Digital Solutions"
        ORGID:
          type: integer
          description: Unique identifier for the organisation.
          example: 351300
        HTMLBADGE:
          type: string
          nullable: true
          description: HTML representation of the organisation's badge or logo.
          example: null
        ABN:
          type: string
          nullable: true
          description: Australian Business Number for the organisation.
          example: null
        ANZSIC:
          type: string
          nullable: true
          description: ANZSIC code of the organisation's industry classification.
          example: null
        ORGANISATIONNOTES:
          type: string
          nullable: true
          description: Notes related to the organisation.
          example: null
        DETAILS:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationDetail'
          description: List of organisation details, such as address and contact info.
        CHILDREN:
          type: array
          description: List of child organisations.
          items:
            type: object
            properties:
              ORGID:
                type: integer
                description: Unique identifier for the child organisation.
                example: 33534
              NAME:
                type: string
                description: Name of the child organisation.
                example: "NRG Online Pty Ltd"
              LEGALNAME:
                type: string
                nullable: true
                description: Legal name of the child organisation.
                example: null
              ANZSIC:
                type: string
                nullable: true
                description: ANZSIC code of the child organisation's industry classification.
                example: null
              ORGANISATIONNOTES:
                type: string
                nullable: true
                description: Notes related to the child organisation.
                example: null
              HIERACHYROOT:
                type: integer
                description: ID of the root organisation in the hierarchy.
                example: 351300
              HIERACHYPATH:
                type: string
                description: Path indicating the child organisation's position in the hierarchy.
                example: "/351300/33534/"
              HIERACHYDEPTH:
                type: integer
                description: The depth level of the child organisation in the hierarchy.
                example: 2
              BOOKING_NOTES:
                type: string
                nullable: true
                description: Booking notes for the child organisation.
                example: null
              SCHOOLTYPEID:
                type: string
                nullable: true
                description: Type ID associated with the child organisation if applicable.
                example: null
              BOOKING_DISCOUNT:
                type: number
                description: Discount applicable to bookings at the child organisation.
                example: 0
              FINANCESYSTEMCARDID:
                type: string
                nullable: true
                description: Finance system card identifier for the child organisation.
                example: null
              ORGNAMEACCOUNTING:
                type: string
                nullable: true
                description: Accounting name for the child organisation.
                example: null
              ABN:
                type: string
                nullable: true
                description: Australian Business Number for the child organisation.
                example: null
              PURCHASEORDERREQUIRED:
                type: integer
                description: Indicates if a purchase order is required (1 = required, 0 = not required).
                example: 0
              NWDF_ORGSIZEBRACKET:
                type: string
                nullable: true
                description: Size bracket category for the child organisation.
                example: null
              HTMLBADGE:
                type: string
                nullable: true
                description: HTML representation of the child organisation's badge or logo.
                example: null
              HASCHILDREN:
                type: boolean
                description: Indicates if the child organisation has its own child organisations.
                example: false
              PARENTORGID:
                type: integer
                description: ID of the parent organisation.
                example: 351300
              PAYERCONTACTID:
                type: integer
                description: ID of the payer contact, if applicable.
                example: 0
              EMPLOYERCONTACTID:
                type: integer
                nullable: true
                description: ID of the employer contact, if applicable.
                example: null
        PARENTORGID:
          type: integer
          nullable: true
          description: ID of the parent organisation.
          example: null
        PAYERCONTACTID:
          type: integer
          description: ID of the payer contact, if applicable.
          example: 0
        EMPLOYERCONTACTID:
          type: integer
          nullable: true
          description: ID of the employer contact, if applicable.
          example: null
    PaymentFlow:
      type: object
      description: Represents the state and results of a payment process.
      properties:
        REQUEST:
          type: object
          description: Details of the payment request.
          properties:
            CANCELURL:
              type: string
              format: uri
              description: The URL to which the client will be directed if they cancel payment processing.
            WEBHOOKURL:
              type: string
              format: uri
              description: An internal-use-only property specifying the webhook URL for payment notifications.
            REDIRECTURL:
              type: string
              format: uri
              description: The URL to which the client will be redirected after completing payment processing.
            INVOICEGUID:
              type: string
              format: uuid
              description: The unique GUID of the aXcelerate invoice to which this payment will be applied.
        STATE:
          type: string
          enum:
            - pending
            - paid
            - failed
          description: Indicates the current state of the payment flow process.
        PLATFORM:
          type: string
          description: Identifies the payment platform used to process the payment.
        RESULT:
          type: object
          description: Outcome details of the payment process.
          properties:
            ERROR:
              type: object
              description: Details of any error encountered during payment processing.
              properties:
                CODE:
                  type: integer
                  description: The error code encountered during processing, if any.
                MSG:
                  type: string
                  description: A short description of the error raised during payment processing.
            TRANSACTIONGUID:
              type: string
              format: uuid
              description: The unique aXcelerate identifier for this transaction, available only when the `STATE` is `paid`.
            TRANSACTIONID:
              type: string
              deprecated: true
              description: Deprecated; this property should not be used in new implementations. Use the `STATE` property instead.
            OK:
              type: boolean
              deprecated: true
              description: Deprecated; this property should not be used in new implementations. Use the `STATE` property instead.
            PLATFORM:
              type: string
              description: Identifies the payment platform used to process the payment.
        PLATFORMREFERENCE:
          type: string
          description: The payment platform's reference identifier for the payment.
    PaymentTransaction:
      type: object
      properties:
        PAYMENTMETHOD:
          type: string
          description: "The method used for the payment."
          example: "Direct Deposit"
        TRANSACTIONPROVIDERID:
          type: string
          description: "Identifier for the transaction provider."
          example: "1"
        GUID:
          type: string
          format: uuid
          description: "Unique identifier for the payment transaction."
          example: "f8575b67-bda2-414b-a21f-b68fba16b0f5"
        CONTACTID:
          type: string
          description: "Identifier for the contact associated with the transaction."
          example: "13971191"
        UNASSIGNEDAMOUNT:
          type: string
          description: "Amount of the payment that is not assigned to any invoice or credit note."
          example: "0"
        TRANSACTIONID:
          type: string
          description: "Identifier for the transaction."
          example: "3784049"
        TRANSACTIONPROVIDER:
          type: string
          description: "Provider of the transaction processing."
          example: "Manual Entry"
        REFERENCE:
          type: string
          description: "Reference number for the transaction."
          example: "000119"
        TRANSDATE:
          type: string
          format: date
          description: "Date of the transaction."
          example: "2024-11-27"
        TRANSACTIONTYPE:
          type: string
          description: "Type of the transaction."
          example: "Money Received"
        PAYMENTMETHODID:
          type: string
          description: "Identifier for the payment method."
          example: "4"
        CURRENCY:
          type: string
          description: "Currency in which the transaction was made."
          example: "AUD"
        DESCRIPTION:
          type: string
          nullable: true
          description: "Optional description of the transaction."
          example: null
        FRAGMENTS:
          type: array
          description: "Details of the payment transaction fragments."
          items:
            $ref: "#/components/schemas/PaymentTransactionFragment"
        AMOUNT:
          type: string
          description: "Total amount of the transaction in dollars."
          example: "155"
        TRANSACTIONTYPEID:
          type: string
          description: "Identifier for the transaction type."
          example: "1"
    PaymentTransactionFragment:
      type: object
      properties:
        INVOICENR:
          type: string
          description: "Invoice number associated with the fragment."
          example: "aX311"
        INVOICEID:
          type: string
          description: "Invoice identifier for the fragment."
          example: "3047161"
        LOCKEDDATE:
          type: string
          nullable: true
          description: "Date when the fragment was locked, if applicable."
          example: null
        CREDITNOTEID:
          type: string
          nullable: true
          description: "Identifier for the credit note, if applicable."
          example: null
        CREDITNOTENR:
          type: string
          nullable: true
          description: "Credit note number, if applicable."
          example: null
        ISLOCKED:
          type: boolean
          description: "Indicates if the fragment is locked."
          example: false
        AMOUNT:
          type: string
          description: "Amount associated with this fragment in dollars."
          example: "155"
        FRAGMENTID:
          type: string
          description: "Unique identifier for the fragment."
          example: "6540572"
        APPLIEDDATE:
          type: string
          description: "Date when the fragment was applied."
          example: "2024-11-27 14:13"
    PortfolioItem:
      type: object
      properties:
        PORTFOLIOID:
          type: integer
          description: Unique ID of the portfolio item
        CONTACTID:
          type: integer
          description: ID of the related contact
        PORTFOLIOTYPEID:
          type: integer
          description: ID of the portfolio type
        PORTFOLIOTYPE:
          type: string
          description: General category of the portfolio item (e.g., Licence, Qualification)
        PORTFOLIOTYPENAME:
          type: string
          description: Specific name of the portfolio type
        NUMBER:
          type: string
          nullable: true
          description: Document or licence number (if applicable)
        FILES:
          type: array
          items:
            type: object
            properties:
              FILENAME:
                type: string
              FOLDER:
                type: string
              ACCESSMIN:
                type: integer
              PORTFOLIODOCID:
                type: integer
              TEMPORARYACCESSURL:
                type: string
                format: uri
          description: List of files attached to the portfolio item
        DATEEXPIRES:
          type: string
          format: date
          nullable: true
          description: Expiry date, if applicable
        ISSUEDBY:
          type: string
          nullable: true
          description: Issuing organisation
        DATEISSUED:
          type: string
          format: date
          nullable: true
          description: Date the item was issued
        DETAILS:
          type: string
          nullable: true
          description: Additional information or notes
        STARTDATE:
          type: string
          format: date
          nullable: true
          description: Start date (if applicable)
        SPECIALTY:
          type: string
          nullable: true
          description: Area of specialty (if applicable)
        NAME:
          type: string
          nullable: true
          description: Name of the portfolio item
        REGISTRATION:
          type: string
          nullable: true
          description: Registration number (if applicable). Used only for Registration type portfolio objects.
        CUSTOMFIELD_MYFIRSTFIELD:
          type: string
          description: Custom field containing the first field's information.
          example: "This is my first field"
        CUSTOMFIELD_MYMULTISELECT:
          type: array
          items:
            type: string
          description: Multiselect custom field with multiple options.
          example: ["A", "B"]
      required:
        - CONTACTID
    Trainer:
      type: object
      properties:
        CONSULTANTID:
          type: integer
          description: "Unique identifier for the trainer."
          example: 103
        CONTACTID:
          type: integer
          description: "Unique identifier for the contact associated with the trainer."
          example: 13315
        NAME:
          type: string
          description: "Name of the trainer."
          example: "Jim Jeffreys"
        EMAIL:
          type: string
          format: email
          description: "Email address of the contact associated to the Trainer."
          example: "jim@jeffreys.com"
        EMPTYPE:
          type: string
          description: |
            Employment type of the trainer (e.g., FT for full-time, PT for Part Time
            CAS for Casual, VOL for Volunteer, CONT for Contractor).
          example: "FT"
          enum:
            - FT
            - PT
            - VOL
            - CONT
            - CAS
        DOMAINID:
          type: integer
          nullable: true
          description: "Domain ID associated with the trainer, if applicable."
          example: null
        RATEAMOUNT:
          type: string
          description: "Pay rate for the nominated PayTimeFrame."
          example: "22.50"
        PAYTIMEFRAME:
          type: string
          description: |
            Timeframe for pay rate (e.g., HR for hourly, D for Day, WK for Week,
            FTN for Fortnight, MTH for Month).
          example: "HR"
          enum:
            - HR
            - D
            - WK
            - FTN
            - MTH
        CONTACTHRS:
          type: integer
          description: "Number of contact hours for the trainer."
          example: 15
        CONTACTHRSTIMEFRAME:
          type: string
          description: "Timeframe for contact hours (e.g., WK for weekly)."
          example: "WK"
        ACTIVE:
          type: boolean
          description: "Indicates whether the trainer is active."
          example: true
        EXPERIENCE:
          type: string
          description: "Description of the trainer's experience."
          example: "A long description here of the trainer's experience."
        FILLINONLY:
          type: boolean
          description: "Indicates whether the trainer is a fill-in (emergency) only."
          example: false
        PAGE:
          type: string
          description: "External website for the trainer."
          example: "jeffreys.com"
        IMAGE:
          type: string
          description: "File name of the trainer's image."
          example: "headshot.jpg"
        CONENTRYDATE:
          type: string
          description: "Entry date of the trainer in the system."
          example: "2010-01-12 00:00"
        CONSULTANTUPDATEDDATETIMEUTC:
          type: string
          nullable: true
          description: "Last updated date and time for the consultant in UTC."
          example: "2010-03-12 16:30"
    TrainingCategory:
      type: object
      properties:
        AREAID:
          type: integer
          description: The unique identifier for the training category area.
          example: 15
        AREA:
          type: string
          description: The name of the training category area.
          example: "Business"
        BGCOLOURHEX:
          type: string
          description: The background color in HEX format for the training category area. An empty string indicates the default is being used.
          example: "FF0000"
        BORDERCOLOURHEX:
          type: string
          description: The border color in HEX format for the training category area. An empty string indicates the default is being used.
          example: "3E8E41"
        CORE:
          type: integer
          enum: [0, 1]
          description: Indicates if the category is a core category (1) or not (0).
        CPDFILTER:
          type: integer
          enum: [0, 1]
          description: >-
            Indicates whether CPD filter is applied (1) or not (0).

            If a Training Category is a CPD Filter, it will appear in the CPD Activity Catalogue to assist Learners when browsing Activities.
        CPDSECTION:
          type: string
          description: The CPD section, if any, associated with the category. Empty string means no section.
          example: "Business Studies"
    User:
      type: object
      properties:
        ROLETYPEID:
          type: integer
          description: "The type of role assigned to the user."
          example: 1
        USERID:
          type: integer
          description: "The unique identifier for the user."
          example: 2962448
        DOMAINID:
          type: integer
          nullable: true
          description: "The ID of the domain associated with the user, if applicable."
          example: null
        FIRSTLOGINDATE:
          type: string
          description: "The date and time of the user's first login. Empty if the user has not logged in."
          example: ""
        CONTACTID:
          type: integer
          description: "The unique identifier of the contact associated with the user."
          example: 13971189
        ROLEID:
          type: integer
          description: "The unique identifier of the user's role."
          example: 2386
        ROLENAME:
          type: string
          description: "The name of the user's role."
          example: "Administrator"
        PENDINGLOGININVITE:
          type: boolean
          description: "Indicates whether a login invite is pending for the user."
          example: false
        ACTIVE:
          type: integer
          description: "Indicates whether the user is active. 1 means active and 0 means inactive."
          example: 1
        PARTNERORGANISATIONID:
          type: string
          description: "The identifier of the partner organisation associated with the user, if any."
          example: ""
        MIGRATED:
          type: boolean
          description: "Indicates whether the user's account has been migrated to a 'Global' login."
          example: false
        USERNAME:
          type: string
          description: "The username of the user."
          example: "jim.jeffreys"
        CONTACT_NAME:
          type: string
          description: "The full name of the contact associated with the user."
          example: "Jim Jeffreys"
    UserRole:
      type: object
      properties:
        ROLEID:
          type: integer
          description: "The unique identifier of the role."
          example: 2288
        FKROLETYPEID:
          type: integer
          example: 1
        NAME:
          type: string
          description: "The name of the role."
          example: "Administrator"
        SSO_ID:
          type: string
          description: "The single sign-on identifier for the role (if any)."
          example: ""
        SIGNINREQUIREMENT:
          type: string
          description: "The sign-in requirement for the role."
          example: "MFARequired"
        FKLMSID:
          type: integer
          example: 528457344
        WIDGETDATA:
          type: string
          nullable: true
          example: "[[{\"code\":\"TASKS_USER\",\"collapsed\":0,\"din\":1}]]"
        PORTALCONFIG:
          type: string
          nullable: true
          example: ""
        ROLETYPE:
          type: string
          description: "The base role type for this role."
          example: "Administrator"
        CANDELETE:
          type: integer
          example: 0
    Venue:
      type: object
      properties:
        CONTACTID:
          type: integer
          description: "The unique identifier for the contact associated with the venue."
          example: 13971191
        NAME:
          type: string
          description: "The name of the venue."
          example: "Sydney Convention Centre"
        SADDRESS1:
          type: string
          description: "The street address of the venue."
          example: "123 Main Street"
        SADDRESS2:
          type: string
          description: "The secondary address line of the venue."
          example: "Suite 200"
        SCITY:
          type: string
          description: "The city where the venue is located."
          example: "Sydney"
        SSTATE:
          type: string
          description: "The state where the venue is located."
          example: "NSW"
        SPOSTCODE:
          type: string
          description: "The postal code of the venue."
          example: "2000"
        MOBILEPHONE:
          type: string
          description: "The mobile phone number of the venue."
          example: "0400 000 000"
security:
  - AxToken: []
    WsToken: []